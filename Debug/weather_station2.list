
weather_station2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001cac  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c4  08001e4c  08001e4c  00011e4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001f10  08001f10  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  08001f10  08001f10  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001f10  08001f10  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001f10  08001f10  00011f10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001f14  08001f14  00011f14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  08001f18  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000f4  2000006c  08001f84  0002006c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000160  08001f84  00020160  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000322a  00000000  00000000  0002009c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000009ca  00000000  00000000  000232c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000190  00000000  00000000  00023c90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000138  00000000  00000000  00023e20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000019e0  00000000  00000000  00023f58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002057  00000000  00000000  00025938  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000544d9  00000000  00000000  0002798f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0007be68  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001084  00000000  00000000  0007bebc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000006c 	.word	0x2000006c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001e34 	.word	0x08001e34

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000070 	.word	0x20000070
 80001dc:	08001e34 	.word	0x08001e34

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <enable_GPIOx_clock>:
#include "GPIO_Lib.h"

static void enable_GPIOx_clock(GPIO_TypeDef *gpio) {
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]

	if (gpio == GPIOA) {
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	4a23      	ldr	r2, [pc, #140]	; (8000328 <enable_GPIOx_clock+0x98>)
 800029c:	4293      	cmp	r3, r2
 800029e:	d106      	bne.n	80002ae <enable_GPIOx_clock+0x1e>

		RCC->AHB1ENR |= GPIOA_CLOCK_EN;
 80002a0:	4b22      	ldr	r3, [pc, #136]	; (800032c <enable_GPIOx_clock+0x9c>)
 80002a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a4:	4a21      	ldr	r2, [pc, #132]	; (800032c <enable_GPIOx_clock+0x9c>)
 80002a6:	f043 0301 	orr.w	r3, r3, #1
 80002aa:	6313      	str	r3, [r2, #48]	; 0x30

	} else if (gpio == GPIOH) {

		RCC->AHB1ENR |= GPIOH_CLOCK_EN;
	}
}
 80002ac:	e035      	b.n	800031a <enable_GPIOx_clock+0x8a>
	} else if (gpio == GPIOB) {
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	4a1f      	ldr	r2, [pc, #124]	; (8000330 <enable_GPIOx_clock+0xa0>)
 80002b2:	4293      	cmp	r3, r2
 80002b4:	d106      	bne.n	80002c4 <enable_GPIOx_clock+0x34>
		RCC->AHB1ENR |= GPIOB_CLOCK_EN;
 80002b6:	4b1d      	ldr	r3, [pc, #116]	; (800032c <enable_GPIOx_clock+0x9c>)
 80002b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ba:	4a1c      	ldr	r2, [pc, #112]	; (800032c <enable_GPIOx_clock+0x9c>)
 80002bc:	f043 0302 	orr.w	r3, r3, #2
 80002c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c2:	e02a      	b.n	800031a <enable_GPIOx_clock+0x8a>
	} else if (gpio == GPIOC) {
 80002c4:	687b      	ldr	r3, [r7, #4]
 80002c6:	4a1b      	ldr	r2, [pc, #108]	; (8000334 <enable_GPIOx_clock+0xa4>)
 80002c8:	4293      	cmp	r3, r2
 80002ca:	d106      	bne.n	80002da <enable_GPIOx_clock+0x4a>
		RCC->AHB1ENR |= GPIOC_CLOCK_EN;
 80002cc:	4b17      	ldr	r3, [pc, #92]	; (800032c <enable_GPIOx_clock+0x9c>)
 80002ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d0:	4a16      	ldr	r2, [pc, #88]	; (800032c <enable_GPIOx_clock+0x9c>)
 80002d2:	f043 0304 	orr.w	r3, r3, #4
 80002d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d8:	e01f      	b.n	800031a <enable_GPIOx_clock+0x8a>
	} else if (gpio == GPIOD) {
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	4a16      	ldr	r2, [pc, #88]	; (8000338 <enable_GPIOx_clock+0xa8>)
 80002de:	4293      	cmp	r3, r2
 80002e0:	d106      	bne.n	80002f0 <enable_GPIOx_clock+0x60>
		RCC->AHB1ENR |= GPIOD_CLOCK_EN;
 80002e2:	4b12      	ldr	r3, [pc, #72]	; (800032c <enable_GPIOx_clock+0x9c>)
 80002e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e6:	4a11      	ldr	r2, [pc, #68]	; (800032c <enable_GPIOx_clock+0x9c>)
 80002e8:	f043 0308 	orr.w	r3, r3, #8
 80002ec:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ee:	e014      	b.n	800031a <enable_GPIOx_clock+0x8a>
	} else if (gpio == GPIOE) {
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	4a12      	ldr	r2, [pc, #72]	; (800033c <enable_GPIOx_clock+0xac>)
 80002f4:	4293      	cmp	r3, r2
 80002f6:	d106      	bne.n	8000306 <enable_GPIOx_clock+0x76>
		RCC->AHB1ENR |= GPIOE_CLOCK_EN;
 80002f8:	4b0c      	ldr	r3, [pc, #48]	; (800032c <enable_GPIOx_clock+0x9c>)
 80002fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fc:	4a0b      	ldr	r2, [pc, #44]	; (800032c <enable_GPIOx_clock+0x9c>)
 80002fe:	f043 0310 	orr.w	r3, r3, #16
 8000302:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000304:	e009      	b.n	800031a <enable_GPIOx_clock+0x8a>
	} else if (gpio == GPIOH) {
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	4a0d      	ldr	r2, [pc, #52]	; (8000340 <enable_GPIOx_clock+0xb0>)
 800030a:	4293      	cmp	r3, r2
 800030c:	d105      	bne.n	800031a <enable_GPIOx_clock+0x8a>
		RCC->AHB1ENR |= GPIOH_CLOCK_EN;
 800030e:	4b07      	ldr	r3, [pc, #28]	; (800032c <enable_GPIOx_clock+0x9c>)
 8000310:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000312:	4a06      	ldr	r2, [pc, #24]	; (800032c <enable_GPIOx_clock+0x9c>)
 8000314:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000318:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031a:	bf00      	nop
 800031c:	370c      	adds	r7, #12
 800031e:	46bd      	mov	sp, r7
 8000320:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000324:	4770      	bx	lr
 8000326:	bf00      	nop
 8000328:	40020000 	.word	0x40020000
 800032c:	40023800 	.word	0x40023800
 8000330:	40020400 	.word	0x40020400
 8000334:	40020800 	.word	0x40020800
 8000338:	40020c00 	.word	0x40020c00
 800033c:	40021000 	.word	0x40021000
 8000340:	40021c00 	.word	0x40021c00

08000344 <init_pin>:

void init_pin(pin_type *pin, GPIO_TypeDef *_gpio, uint8_t _pin_num,
		uint8_t _mode) {
 8000344:	b580      	push	{r7, lr}
 8000346:	b084      	sub	sp, #16
 8000348:	af00      	add	r7, sp, #0
 800034a:	60f8      	str	r0, [r7, #12]
 800034c:	60b9      	str	r1, [r7, #8]
 800034e:	4611      	mov	r1, r2
 8000350:	461a      	mov	r2, r3
 8000352:	460b      	mov	r3, r1
 8000354:	71fb      	strb	r3, [r7, #7]
 8000356:	4613      	mov	r3, r2
 8000358:	71bb      	strb	r3, [r7, #6]
	pin->gpio = _gpio;
 800035a:	68fb      	ldr	r3, [r7, #12]
 800035c:	68ba      	ldr	r2, [r7, #8]
 800035e:	601a      	str	r2, [r3, #0]
	pin->pin_num = _pin_num;
 8000360:	79fa      	ldrb	r2, [r7, #7]
 8000362:	68fb      	ldr	r3, [r7, #12]
 8000364:	605a      	str	r2, [r3, #4]

	enable_GPIOx_clock(_gpio);
 8000366:	68b8      	ldr	r0, [r7, #8]
 8000368:	f7ff ff92 	bl	8000290 <enable_GPIOx_clock>

	if (_mode < 3) {
 800036c:	79bb      	ldrb	r3, [r7, #6]
 800036e:	2b02      	cmp	r3, #2
 8000370:	d805      	bhi.n	800037e <init_pin+0x3a>
		set_input(pin, _mode);
 8000372:	79bb      	ldrb	r3, [r7, #6]
 8000374:	4619      	mov	r1, r3
 8000376:	68f8      	ldr	r0, [r7, #12]
 8000378:	f000 f80a 	bl	8000390 <set_input>
	} else {
		set_output(pin, _mode);
	}

}
 800037c:	e004      	b.n	8000388 <init_pin+0x44>
		set_output(pin, _mode);
 800037e:	79bb      	ldrb	r3, [r7, #6]
 8000380:	4619      	mov	r1, r3
 8000382:	68f8      	ldr	r0, [r7, #12]
 8000384:	f000 f856 	bl	8000434 <set_output>
}
 8000388:	bf00      	nop
 800038a:	3710      	adds	r7, #16
 800038c:	46bd      	mov	sp, r7
 800038e:	bd80      	pop	{r7, pc}

08000390 <set_input>:

void set_input(pin_type *pin, uint8_t mode) {
 8000390:	b480      	push	{r7}
 8000392:	b083      	sub	sp, #12
 8000394:	af00      	add	r7, sp, #0
 8000396:	6078      	str	r0, [r7, #4]
 8000398:	460b      	mov	r3, r1
 800039a:	70fb      	strb	r3, [r7, #3]
	pin->gpio->MODER &= ~(3u << ((pin->pin_num * 2)));
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	6819      	ldr	r1, [r3, #0]
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	685b      	ldr	r3, [r3, #4]
 80003a6:	005b      	lsls	r3, r3, #1
 80003a8:	2203      	movs	r2, #3
 80003aa:	fa02 f303 	lsl.w	r3, r2, r3
 80003ae:	43da      	mvns	r2, r3
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	400a      	ands	r2, r1
 80003b6:	601a      	str	r2, [r3, #0]
	pin->gpio->PUPDR &= ~(3u << ((pin->pin_num * 2)));
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	68d9      	ldr	r1, [r3, #12]
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	685b      	ldr	r3, [r3, #4]
 80003c2:	005b      	lsls	r3, r3, #1
 80003c4:	2203      	movs	r2, #3
 80003c6:	fa02 f303 	lsl.w	r3, r2, r3
 80003ca:	43da      	mvns	r2, r3
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	400a      	ands	r2, r1
 80003d2:	60da      	str	r2, [r3, #12]

	switch (mode) {
 80003d4:	78fb      	ldrb	r3, [r7, #3]
 80003d6:	2b02      	cmp	r3, #2
 80003d8:	d015      	beq.n	8000406 <set_input+0x76>
 80003da:	2b02      	cmp	r3, #2
 80003dc:	dc21      	bgt.n	8000422 <set_input+0x92>
 80003de:	2b00      	cmp	r3, #0
 80003e0:	d021      	beq.n	8000426 <set_input+0x96>
 80003e2:	2b01      	cmp	r3, #1
 80003e4:	d000      	beq.n	80003e8 <set_input+0x58>

	case INPUT_PD:
		pin->gpio->PUPDR |= (PD << ((pin->pin_num * 2)));

	default:
		break;
 80003e6:	e01c      	b.n	8000422 <set_input+0x92>
		pin->gpio->PUPDR |= (PU << ((pin->pin_num * 2)));
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	68da      	ldr	r2, [r3, #12]
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	685b      	ldr	r3, [r3, #4]
 80003f2:	005b      	lsls	r3, r3, #1
 80003f4:	2101      	movs	r1, #1
 80003f6:	fa01 f303 	lsl.w	r3, r1, r3
 80003fa:	4619      	mov	r1, r3
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	430a      	orrs	r2, r1
 8000402:	60da      	str	r2, [r3, #12]
		break;
 8000404:	e010      	b.n	8000428 <set_input+0x98>
		pin->gpio->PUPDR |= (PD << ((pin->pin_num * 2)));
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	68da      	ldr	r2, [r3, #12]
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	685b      	ldr	r3, [r3, #4]
 8000410:	005b      	lsls	r3, r3, #1
 8000412:	2102      	movs	r1, #2
 8000414:	fa01 f303 	lsl.w	r3, r1, r3
 8000418:	4619      	mov	r1, r3
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	430a      	orrs	r2, r1
 8000420:	60da      	str	r2, [r3, #12]
		break;
 8000422:	bf00      	nop
 8000424:	e000      	b.n	8000428 <set_input+0x98>
		break;
 8000426:	bf00      	nop

	}

}
 8000428:	bf00      	nop
 800042a:	370c      	adds	r7, #12
 800042c:	46bd      	mov	sp, r7
 800042e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000432:	4770      	bx	lr

08000434 <set_output>:

void set_output(pin_type *pin, uint8_t mode) {
 8000434:	b480      	push	{r7}
 8000436:	b083      	sub	sp, #12
 8000438:	af00      	add	r7, sp, #0
 800043a:	6078      	str	r0, [r7, #4]
 800043c:	460b      	mov	r3, r1
 800043e:	70fb      	strb	r3, [r7, #3]
	pin->gpio->MODER &= ~(3u << ((pin->pin_num * 2)));
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	6819      	ldr	r1, [r3, #0]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	685b      	ldr	r3, [r3, #4]
 800044a:	005b      	lsls	r3, r3, #1
 800044c:	2203      	movs	r2, #3
 800044e:	fa02 f303 	lsl.w	r3, r2, r3
 8000452:	43da      	mvns	r2, r3
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	400a      	ands	r2, r1
 800045a:	601a      	str	r2, [r3, #0]
	pin->gpio->MODER |= output << ((pin->pin_num * 2));
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	681a      	ldr	r2, [r3, #0]
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	685b      	ldr	r3, [r3, #4]
 8000466:	005b      	lsls	r3, r3, #1
 8000468:	2101      	movs	r1, #1
 800046a:	fa01 f303 	lsl.w	r3, r1, r3
 800046e:	4619      	mov	r1, r3
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	430a      	orrs	r2, r1
 8000476:	601a      	str	r2, [r3, #0]

	switch (mode) {
 8000478:	78fb      	ldrb	r3, [r7, #3]
 800047a:	2b03      	cmp	r3, #3
 800047c:	d010      	beq.n	80004a0 <set_output+0x6c>
 800047e:	2b04      	cmp	r3, #4
 8000480:	d000      	beq.n	8000484 <set_output+0x50>
	case OUTPUT_OD:
		pin->gpio->OTYPER |= (OD << (pin->pin_num));
		break;

	default:
		break;
 8000482:	e00e      	b.n	80004a2 <set_output+0x6e>
		pin->gpio->OTYPER |= (OD << (pin->pin_num));
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	685a      	ldr	r2, [r3, #4]
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	685b      	ldr	r3, [r3, #4]
 800048e:	2101      	movs	r1, #1
 8000490:	fa01 f303 	lsl.w	r3, r1, r3
 8000494:	4619      	mov	r1, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	430a      	orrs	r2, r1
 800049c:	605a      	str	r2, [r3, #4]
		break;
 800049e:	e000      	b.n	80004a2 <set_output+0x6e>
		break;
 80004a0:	bf00      	nop
	}

}
 80004a2:	bf00      	nop
 80004a4:	370c      	adds	r7, #12
 80004a6:	46bd      	mov	sp, r7
 80004a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ac:	4770      	bx	lr

080004ae <read_pin>:
	}

	return state;
}

pin_state read_pin(pin_type *pin) {
 80004ae:	b480      	push	{r7}
 80004b0:	b085      	sub	sp, #20
 80004b2:	af00      	add	r7, sp, #0
 80004b4:	6078      	str	r0, [r7, #4]
	uint32_t state = (pin->gpio->IDR >> pin->pin_num) & 1u;
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	691a      	ldr	r2, [r3, #16]
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	685b      	ldr	r3, [r3, #4]
 80004c0:	fa22 f303 	lsr.w	r3, r2, r3
 80004c4:	f003 0301 	and.w	r3, r3, #1
 80004c8:	60fb      	str	r3, [r7, #12]

	if (state == 1) {
 80004ca:	68fb      	ldr	r3, [r7, #12]
 80004cc:	2b01      	cmp	r3, #1
 80004ce:	d101      	bne.n	80004d4 <read_pin+0x26>
		return HIGH;
 80004d0:	2301      	movs	r3, #1
 80004d2:	e000      	b.n	80004d6 <read_pin+0x28>
	}

	return LOW;
 80004d4:	2300      	movs	r3, #0
}
 80004d6:	4618      	mov	r0, r3
 80004d8:	3714      	adds	r7, #20
 80004da:	46bd      	mov	sp, r7
 80004dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e0:	4770      	bx	lr

080004e2 <toggle_pin>:
pin_state toggle_pin(pin_type *pin) {
 80004e2:	b580      	push	{r7, lr}
 80004e4:	b082      	sub	sp, #8
 80004e6:	af00      	add	r7, sp, #0
 80004e8:	6078      	str	r0, [r7, #4]
	pin->gpio->ODR ^= (1u << pin->pin_num);
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	6959      	ldr	r1, [r3, #20]
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	685b      	ldr	r3, [r3, #4]
 80004f4:	2201      	movs	r2, #1
 80004f6:	409a      	lsls	r2, r3
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	404a      	eors	r2, r1
 80004fe:	615a      	str	r2, [r3, #20]

	return read_pin(pin);
 8000500:	6878      	ldr	r0, [r7, #4]
 8000502:	f7ff ffd4 	bl	80004ae <read_pin>
 8000506:	4603      	mov	r3, r0
}
 8000508:	4618      	mov	r0, r3
 800050a:	3708      	adds	r7, #8
 800050c:	46bd      	mov	sp, r7
 800050e:	bd80      	pop	{r7, pc}

08000510 <select_clk_source>:
 */
#include "clocks_lib.h"
#include "stm32f4xx.h"
#include <stdio.h>

static void select_clk_source(uint8_t clk_source) {
 8000510:	b480      	push	{r7}
 8000512:	b083      	sub	sp, #12
 8000514:	af00      	add	r7, sp, #0
 8000516:	4603      	mov	r3, r0
 8000518:	71fb      	strb	r3, [r7, #7]
	RCC->CFGR |= clk_source;
 800051a:	4b06      	ldr	r3, [pc, #24]	; (8000534 <select_clk_source+0x24>)
 800051c:	689a      	ldr	r2, [r3, #8]
 800051e:	79fb      	ldrb	r3, [r7, #7]
 8000520:	4904      	ldr	r1, [pc, #16]	; (8000534 <select_clk_source+0x24>)
 8000522:	4313      	orrs	r3, r2
 8000524:	608b      	str	r3, [r1, #8]
}
 8000526:	bf00      	nop
 8000528:	370c      	adds	r7, #12
 800052a:	46bd      	mov	sp, r7
 800052c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000530:	4770      	bx	lr
 8000532:	bf00      	nop
 8000534:	40023800 	.word	0x40023800

08000538 <get_PLLP>:
static uint16_t get_PLLN() {

	return RCC->PLLCFGR & (511u << 6);
}

static uint8_t get_PLLP() {
 8000538:	b480      	push	{r7}
 800053a:	b083      	sub	sp, #12
 800053c:	af00      	add	r7, sp, #0
	uint8_t PLLP;

	switch (RCC->PLLCFGR & (3u << 16)) {
 800053e:	4b12      	ldr	r3, [pc, #72]	; (8000588 <get_PLLP+0x50>)
 8000540:	685b      	ldr	r3, [r3, #4]
 8000542:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8000546:	2b03      	cmp	r3, #3
 8000548:	d816      	bhi.n	8000578 <get_PLLP+0x40>
 800054a:	a201      	add	r2, pc, #4	; (adr r2, 8000550 <get_PLLP+0x18>)
 800054c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000550:	08000561 	.word	0x08000561
 8000554:	08000567 	.word	0x08000567
 8000558:	0800056d 	.word	0x0800056d
 800055c:	08000573 	.word	0x08000573
	case PLLP_2:
		PLLP = 2;
 8000560:	2302      	movs	r3, #2
 8000562:	71fb      	strb	r3, [r7, #7]
		break;
 8000564:	e008      	b.n	8000578 <get_PLLP+0x40>
	case PLLP_4:
		PLLP = 4;
 8000566:	2304      	movs	r3, #4
 8000568:	71fb      	strb	r3, [r7, #7]
		break;
 800056a:	e005      	b.n	8000578 <get_PLLP+0x40>
	case PLLP_6:
		PLLP = 6;
 800056c:	2306      	movs	r3, #6
 800056e:	71fb      	strb	r3, [r7, #7]
		break;
 8000570:	e002      	b.n	8000578 <get_PLLP+0x40>
	case PLLP_8:
		PLLP = 8;
 8000572:	2308      	movs	r3, #8
 8000574:	71fb      	strb	r3, [r7, #7]
		break;
 8000576:	bf00      	nop
	}

	return PLLP;
 8000578:	79fb      	ldrb	r3, [r7, #7]
}
 800057a:	4618      	mov	r0, r3
 800057c:	370c      	adds	r7, #12
 800057e:	46bd      	mov	sp, r7
 8000580:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000584:	4770      	bx	lr
 8000586:	bf00      	nop
 8000588:	40023800 	.word	0x40023800

0800058c <calculate_PLL_clk>:

static uint32_t calculate_PLL_clk(uint32_t source_clk, uint8_t PLLM,
		uint16_t PLLN, uint8_t PLLP) {
 800058c:	b480      	push	{r7}
 800058e:	b083      	sub	sp, #12
 8000590:	af00      	add	r7, sp, #0
 8000592:	6078      	str	r0, [r7, #4]
 8000594:	4608      	mov	r0, r1
 8000596:	4611      	mov	r1, r2
 8000598:	461a      	mov	r2, r3
 800059a:	4603      	mov	r3, r0
 800059c:	70fb      	strb	r3, [r7, #3]
 800059e:	460b      	mov	r3, r1
 80005a0:	803b      	strh	r3, [r7, #0]
 80005a2:	4613      	mov	r3, r2
 80005a4:	70bb      	strb	r3, [r7, #2]

	return source_clk / PLLM * PLLN / PLLP;
 80005a6:	78fb      	ldrb	r3, [r7, #3]
 80005a8:	687a      	ldr	r2, [r7, #4]
 80005aa:	fbb2 f3f3 	udiv	r3, r2, r3
 80005ae:	883a      	ldrh	r2, [r7, #0]
 80005b0:	fb02 f203 	mul.w	r2, r2, r3
 80005b4:	78bb      	ldrb	r3, [r7, #2]
 80005b6:	fbb2 f3f3 	udiv	r3, r2, r3
}
 80005ba:	4618      	mov	r0, r3
 80005bc:	370c      	adds	r7, #12
 80005be:	46bd      	mov	sp, r7
 80005c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c4:	4770      	bx	lr
	...

080005c8 <init_SYSCLK_PLL>:
	RCC->CR |= 1u << 18;
	select_clk_source(HSE);
}

void init_SYSCLK_PLL(uint8_t clk_source, uint8_t PLLM, uint16_t PLLN,
		uint8_t PLLP) {
 80005c8:	b590      	push	{r4, r7, lr}
 80005ca:	b085      	sub	sp, #20
 80005cc:	af00      	add	r7, sp, #0
 80005ce:	4604      	mov	r4, r0
 80005d0:	4608      	mov	r0, r1
 80005d2:	4611      	mov	r1, r2
 80005d4:	461a      	mov	r2, r3
 80005d6:	4623      	mov	r3, r4
 80005d8:	71fb      	strb	r3, [r7, #7]
 80005da:	4603      	mov	r3, r0
 80005dc:	71bb      	strb	r3, [r7, #6]
 80005de:	460b      	mov	r3, r1
 80005e0:	80bb      	strh	r3, [r7, #4]
 80005e2:	4613      	mov	r3, r2
 80005e4:	70fb      	strb	r3, [r7, #3]
	RCC->PLLCFGR = 0;
 80005e6:	4b40      	ldr	r3, [pc, #256]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 80005e8:	2200      	movs	r2, #0
 80005ea:	605a      	str	r2, [r3, #4]

	RCC->PLLCFGR |= PLLM;
 80005ec:	4b3e      	ldr	r3, [pc, #248]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 80005ee:	685a      	ldr	r2, [r3, #4]
 80005f0:	79bb      	ldrb	r3, [r7, #6]
 80005f2:	493d      	ldr	r1, [pc, #244]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 80005f4:	4313      	orrs	r3, r2
 80005f6:	604b      	str	r3, [r1, #4]
	RCC->PLLCFGR |= PLLN << 6;
 80005f8:	4b3b      	ldr	r3, [pc, #236]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 80005fa:	685b      	ldr	r3, [r3, #4]
 80005fc:	88ba      	ldrh	r2, [r7, #4]
 80005fe:	0192      	lsls	r2, r2, #6
 8000600:	4611      	mov	r1, r2
 8000602:	4a39      	ldr	r2, [pc, #228]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 8000604:	430b      	orrs	r3, r1
 8000606:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR |= PLLP << 16;
 8000608:	4b37      	ldr	r3, [pc, #220]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 800060a:	685b      	ldr	r3, [r3, #4]
 800060c:	78fa      	ldrb	r2, [r7, #3]
 800060e:	0412      	lsls	r2, r2, #16
 8000610:	4611      	mov	r1, r2
 8000612:	4a35      	ldr	r2, [pc, #212]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 8000614:	430b      	orrs	r3, r1
 8000616:	6053      	str	r3, [r2, #4]

	uint32_t clock_value = calculate_PLL_clk(clk_source, PLLM, PLLN,
 8000618:	79fc      	ldrb	r4, [r7, #7]
 800061a:	78fb      	ldrb	r3, [r7, #3]
 800061c:	4618      	mov	r0, r3
 800061e:	f7ff ff8b 	bl	8000538 <get_PLLP>
 8000622:	4603      	mov	r3, r0
 8000624:	88ba      	ldrh	r2, [r7, #4]
 8000626:	79b9      	ldrb	r1, [r7, #6]
 8000628:	4620      	mov	r0, r4
 800062a:	f7ff ffaf 	bl	800058c <calculate_PLL_clk>
 800062e:	60f8      	str	r0, [r7, #12]
			get_PLLP(PLLP));
	printf("%d\n", (int) clock_value);
 8000630:	68fb      	ldr	r3, [r7, #12]
 8000632:	4619      	mov	r1, r3
 8000634:	482d      	ldr	r0, [pc, #180]	; (80006ec <init_SYSCLK_PLL+0x124>)
 8000636:	f000 f985 	bl	8000944 <iprintf>

	if (clock_value > 60000000) {
 800063a:	68fb      	ldr	r3, [r7, #12]
 800063c:	4a2c      	ldr	r2, [pc, #176]	; (80006f0 <init_SYSCLK_PLL+0x128>)
 800063e:	4293      	cmp	r3, r2
 8000640:	d912      	bls.n	8000668 <init_SYSCLK_PLL+0xa0>
		RCC->APB1ENR |= 1u << 28;
 8000642:	4b29      	ldr	r3, [pc, #164]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 8000644:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000646:	4a28      	ldr	r2, [pc, #160]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 8000648:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800064c:	6413      	str	r3, [r2, #64]	; 0x40
		PWR->CR |= PWR_VOS_SCALE_2 << 14;
 800064e:	4b29      	ldr	r3, [pc, #164]	; (80006f4 <init_SYSCLK_PLL+0x12c>)
 8000650:	681b      	ldr	r3, [r3, #0]
 8000652:	4a28      	ldr	r2, [pc, #160]	; (80006f4 <init_SYSCLK_PLL+0x12c>)
 8000654:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000658:	6013      	str	r3, [r2, #0]
		FLASH->ACR |= 2u;
 800065a:	4b27      	ldr	r3, [pc, #156]	; (80006f8 <init_SYSCLK_PLL+0x130>)
 800065c:	681b      	ldr	r3, [r3, #0]
 800065e:	4a26      	ldr	r2, [pc, #152]	; (80006f8 <init_SYSCLK_PLL+0x130>)
 8000660:	f043 0302 	orr.w	r3, r3, #2
 8000664:	6013      	str	r3, [r2, #0]
 8000666:	e009      	b.n	800067c <init_SYSCLK_PLL+0xb4>
	} else if (clock_value > 30000000) {
 8000668:	68fb      	ldr	r3, [r7, #12]
 800066a:	4a24      	ldr	r2, [pc, #144]	; (80006fc <init_SYSCLK_PLL+0x134>)
 800066c:	4293      	cmp	r3, r2
 800066e:	d905      	bls.n	800067c <init_SYSCLK_PLL+0xb4>
		FLASH->ACR |= 2u;
 8000670:	4b21      	ldr	r3, [pc, #132]	; (80006f8 <init_SYSCLK_PLL+0x130>)
 8000672:	681b      	ldr	r3, [r3, #0]
 8000674:	4a20      	ldr	r2, [pc, #128]	; (80006f8 <init_SYSCLK_PLL+0x130>)
 8000676:	f043 0302 	orr.w	r3, r3, #2
 800067a:	6013      	str	r3, [r2, #0]
	}


	switch (clk_source) {
 800067c:	79fb      	ldrb	r3, [r7, #7]
 800067e:	2b00      	cmp	r3, #0
 8000680:	d002      	beq.n	8000688 <init_SYSCLK_PLL+0xc0>
 8000682:	2b01      	cmp	r3, #1
 8000684:	d013      	beq.n	80006ae <init_SYSCLK_PLL+0xe6>
 8000686:	e019      	b.n	80006bc <init_SYSCLK_PLL+0xf4>
	case HSE:
		RCC->CR |= 1u << 18;
 8000688:	4b17      	ldr	r3, [pc, #92]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	4a16      	ldr	r2, [pc, #88]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 800068e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000692:	6013      	str	r3, [r2, #0]
		RCC->CR |= 1u << 16;
 8000694:	4b14      	ldr	r3, [pc, #80]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	4a13      	ldr	r2, [pc, #76]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 800069a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800069e:	6013      	str	r3, [r2, #0]
		RCC->PLLCFGR |= 1u << 22;
 80006a0:	4b11      	ldr	r3, [pc, #68]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 80006a2:	685b      	ldr	r3, [r3, #4]
 80006a4:	4a10      	ldr	r2, [pc, #64]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 80006a6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80006aa:	6053      	str	r3, [r2, #4]
		break;
 80006ac:	e006      	b.n	80006bc <init_SYSCLK_PLL+0xf4>

	case HSI:
		RCC->CR |= 1u;
 80006ae:	4b0e      	ldr	r3, [pc, #56]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 80006b0:	681b      	ldr	r3, [r3, #0]
 80006b2:	4a0d      	ldr	r2, [pc, #52]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 80006b4:	f043 0301 	orr.w	r3, r3, #1
 80006b8:	6013      	str	r3, [r2, #0]
		break;
 80006ba:	bf00      	nop
	}

	RCC->CR |= 1u << 24;
 80006bc:	4b0a      	ldr	r3, [pc, #40]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	4a09      	ldr	r2, [pc, #36]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 80006c2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80006c6:	6013      	str	r3, [r2, #0]

	select_clk_source(PLL);
 80006c8:	2002      	movs	r0, #2
 80006ca:	f7ff ff21 	bl	8000510 <select_clk_source>

	if (clk_source == HSE) {
 80006ce:	79fb      	ldrb	r3, [r7, #7]
 80006d0:	2b00      	cmp	r3, #0
 80006d2:	d105      	bne.n	80006e0 <init_SYSCLK_PLL+0x118>
		RCC->CR &= ~1u;
 80006d4:	4b04      	ldr	r3, [pc, #16]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 80006d6:	681b      	ldr	r3, [r3, #0]
 80006d8:	4a03      	ldr	r2, [pc, #12]	; (80006e8 <init_SYSCLK_PLL+0x120>)
 80006da:	f023 0301 	bic.w	r3, r3, #1
 80006de:	6013      	str	r3, [r2, #0]
	}



}
 80006e0:	bf00      	nop
 80006e2:	3714      	adds	r7, #20
 80006e4:	46bd      	mov	sp, r7
 80006e6:	bd90      	pop	{r4, r7, pc}
 80006e8:	40023800 	.word	0x40023800
 80006ec:	08001e4c 	.word	0x08001e4c
 80006f0:	03938700 	.word	0x03938700
 80006f4:	40007000 	.word	0x40007000
 80006f8:	40023c00 	.word	0x40023c00
 80006fc:	01c9c380 	.word	0x01c9c380

08000700 <init_peripheral_prescalers>:

void init_peripheral_prescalers(uint8_t AHB_prescaler, uint8_t APB1_prescaler,
		uint8_t APB2_prescaler) {
 8000700:	b480      	push	{r7}
 8000702:	b083      	sub	sp, #12
 8000704:	af00      	add	r7, sp, #0
 8000706:	4603      	mov	r3, r0
 8000708:	71fb      	strb	r3, [r7, #7]
 800070a:	460b      	mov	r3, r1
 800070c:	71bb      	strb	r3, [r7, #6]
 800070e:	4613      	mov	r3, r2
 8000710:	717b      	strb	r3, [r7, #5]
	RCC->CFGR |= AHB_prescaler << 4;
 8000712:	4b0f      	ldr	r3, [pc, #60]	; (8000750 <init_peripheral_prescalers+0x50>)
 8000714:	689b      	ldr	r3, [r3, #8]
 8000716:	79fa      	ldrb	r2, [r7, #7]
 8000718:	0112      	lsls	r2, r2, #4
 800071a:	4611      	mov	r1, r2
 800071c:	4a0c      	ldr	r2, [pc, #48]	; (8000750 <init_peripheral_prescalers+0x50>)
 800071e:	430b      	orrs	r3, r1
 8000720:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= APB1_prescaler << 10;
 8000722:	4b0b      	ldr	r3, [pc, #44]	; (8000750 <init_peripheral_prescalers+0x50>)
 8000724:	689b      	ldr	r3, [r3, #8]
 8000726:	79ba      	ldrb	r2, [r7, #6]
 8000728:	0292      	lsls	r2, r2, #10
 800072a:	4611      	mov	r1, r2
 800072c:	4a08      	ldr	r2, [pc, #32]	; (8000750 <init_peripheral_prescalers+0x50>)
 800072e:	430b      	orrs	r3, r1
 8000730:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= APB2_prescaler << 13;
 8000732:	4b07      	ldr	r3, [pc, #28]	; (8000750 <init_peripheral_prescalers+0x50>)
 8000734:	689b      	ldr	r3, [r3, #8]
 8000736:	797a      	ldrb	r2, [r7, #5]
 8000738:	0352      	lsls	r2, r2, #13
 800073a:	4611      	mov	r1, r2
 800073c:	4a04      	ldr	r2, [pc, #16]	; (8000750 <init_peripheral_prescalers+0x50>)
 800073e:	430b      	orrs	r3, r1
 8000740:	6093      	str	r3, [r2, #8]
}
 8000742:	bf00      	nop
 8000744:	370c      	adds	r7, #12
 8000746:	46bd      	mov	sp, r7
 8000748:	f85d 7b04 	ldr.w	r7, [sp], #4
 800074c:	4770      	bx	lr
 800074e:	bf00      	nop
 8000750:	40023800 	.word	0x40023800

08000754 <SysTick_Handler>:
pin_type internal_led_pin;
pin_type external_led;

int count = 0;

void SysTick_Handler() {
 8000754:	b480      	push	{r7}
 8000756:	af00      	add	r7, sp, #0

	SysTick->CTRL = 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <SysTick_Handler+0x14>)
 800075a:	2200      	movs	r2, #0
 800075c:	601a      	str	r2, [r3, #0]

	//handle_delay_IT();

}
 800075e:	bf00      	nop
 8000760:	46bd      	mov	sp, r7
 8000762:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000766:	4770      	bx	lr
 8000768:	e000e010 	.word	0xe000e010

0800076c <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler() {
 800076c:	b580      	push	{r7, lr}
 800076e:	af00      	add	r7, sp, #0

	toggle_pin(&external_led);
 8000770:	4805      	ldr	r0, [pc, #20]	; (8000788 <EXTI15_10_IRQHandler+0x1c>)
 8000772:	f7ff feb6 	bl	80004e2 <toggle_pin>
	//handle_data_pin_IT();
	EXTI->PR |= 1u << 10;
 8000776:	4b05      	ldr	r3, [pc, #20]	; (800078c <EXTI15_10_IRQHandler+0x20>)
 8000778:	695b      	ldr	r3, [r3, #20]
 800077a:	4a04      	ldr	r2, [pc, #16]	; (800078c <EXTI15_10_IRQHandler+0x20>)
 800077c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000780:	6153      	str	r3, [r2, #20]

}
 8000782:	bf00      	nop
 8000784:	bd80      	pop	{r7, pc}
 8000786:	bf00      	nop
 8000788:	20000140 	.word	0x20000140
 800078c:	40013c00 	.word	0x40013c00

08000790 <enable_FPU>:
	printf("%d\n", (int) dht22_data.temperature);
	printf("%d\n", (int) dht22_data.humidity);

}

void enable_FPU() {
 8000790:	b480      	push	{r7}
 8000792:	b083      	sub	sp, #12
 8000794:	af00      	add	r7, sp, #0
	uint32_t* FPU_CPACR = 0xE000ED88;
 8000796:	4b07      	ldr	r3, [pc, #28]	; (80007b4 <enable_FPU+0x24>)
 8000798:	607b      	str	r3, [r7, #4]

	*FPU_CPACR |= 15u << 20;
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	681b      	ldr	r3, [r3, #0]
 800079e:	f443 0270 	orr.w	r2, r3, #15728640	; 0xf00000
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	601a      	str	r2, [r3, #0]
}
 80007a6:	bf00      	nop
 80007a8:	370c      	adds	r7, #12
 80007aa:	46bd      	mov	sp, r7
 80007ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007b0:	4770      	bx	lr
 80007b2:	bf00      	nop
 80007b4:	e000ed88 	.word	0xe000ed88

080007b8 <main>:


int main(void) {
 80007b8:	b580      	push	{r7, lr}
 80007ba:	af00      	add	r7, sp, #0

	initialise_monitor_handles();
 80007bc:	f001 fac0 	bl	8001d40 <initialise_monitor_handles>

	printf("hello\n");
 80007c0:	480b      	ldr	r0, [pc, #44]	; (80007f0 <main+0x38>)
 80007c2:	f000 f945 	bl	8000a50 <puts>

	enable_FPU();
 80007c6:	f7ff ffe3 	bl	8000790 <enable_FPU>

	init_SYSCLK_PLL(HSE, 4u, 84u, PLLP_2);
 80007ca:	2300      	movs	r3, #0
 80007cc:	2254      	movs	r2, #84	; 0x54
 80007ce:	2104      	movs	r1, #4
 80007d0:	2000      	movs	r0, #0
 80007d2:	f7ff fef9 	bl	80005c8 <init_SYSCLK_PLL>
	init_peripheral_prescalers(AHB_PRESCALER_1, APBx_PRESCALER_2, APBx_PRESCALER_2);
 80007d6:	2204      	movs	r2, #4
 80007d8:	2104      	movs	r1, #4
 80007da:	2000      	movs	r0, #0
 80007dc:	f7ff ff90 	bl	8000700 <init_peripheral_prescalers>

	//printf("%d\n", (int) get_AHB_clock());

	init_pin(&internal_led_pin, GPIOA, 5, OUTPUT_PP);
 80007e0:	2303      	movs	r3, #3
 80007e2:	2205      	movs	r2, #5
 80007e4:	4903      	ldr	r1, [pc, #12]	; (80007f4 <main+0x3c>)
 80007e6:	4804      	ldr	r0, [pc, #16]	; (80007f8 <main+0x40>)
 80007e8:	f7ff fdac 	bl	8000344 <init_pin>



	//delay_IR(100);

	while (1) {
 80007ec:	e7fe      	b.n	80007ec <main+0x34>
 80007ee:	bf00      	nop
 80007f0:	08001e54 	.word	0x08001e54
 80007f4:	40020000 	.word	0x40020000
 80007f8:	20000148 	.word	0x20000148

080007fc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80007fc:	b580      	push	{r7, lr}
 80007fe:	b086      	sub	sp, #24
 8000800:	af00      	add	r7, sp, #0
 8000802:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000804:	4a14      	ldr	r2, [pc, #80]	; (8000858 <_sbrk+0x5c>)
 8000806:	4b15      	ldr	r3, [pc, #84]	; (800085c <_sbrk+0x60>)
 8000808:	1ad3      	subs	r3, r2, r3
 800080a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800080c:	697b      	ldr	r3, [r7, #20]
 800080e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000810:	4b13      	ldr	r3, [pc, #76]	; (8000860 <_sbrk+0x64>)
 8000812:	681b      	ldr	r3, [r3, #0]
 8000814:	2b00      	cmp	r3, #0
 8000816:	d102      	bne.n	800081e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000818:	4b11      	ldr	r3, [pc, #68]	; (8000860 <_sbrk+0x64>)
 800081a:	4a12      	ldr	r2, [pc, #72]	; (8000864 <_sbrk+0x68>)
 800081c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800081e:	4b10      	ldr	r3, [pc, #64]	; (8000860 <_sbrk+0x64>)
 8000820:	681a      	ldr	r2, [r3, #0]
 8000822:	687b      	ldr	r3, [r7, #4]
 8000824:	4413      	add	r3, r2
 8000826:	693a      	ldr	r2, [r7, #16]
 8000828:	429a      	cmp	r2, r3
 800082a:	d207      	bcs.n	800083c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800082c:	f000 f858 	bl	80008e0 <__errno>
 8000830:	4603      	mov	r3, r0
 8000832:	220c      	movs	r2, #12
 8000834:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000836:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800083a:	e009      	b.n	8000850 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800083c:	4b08      	ldr	r3, [pc, #32]	; (8000860 <_sbrk+0x64>)
 800083e:	681b      	ldr	r3, [r3, #0]
 8000840:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000842:	4b07      	ldr	r3, [pc, #28]	; (8000860 <_sbrk+0x64>)
 8000844:	681a      	ldr	r2, [r3, #0]
 8000846:	687b      	ldr	r3, [r7, #4]
 8000848:	4413      	add	r3, r2
 800084a:	4a05      	ldr	r2, [pc, #20]	; (8000860 <_sbrk+0x64>)
 800084c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800084e:	68fb      	ldr	r3, [r7, #12]
}
 8000850:	4618      	mov	r0, r3
 8000852:	3718      	adds	r7, #24
 8000854:	46bd      	mov	sp, r7
 8000856:	bd80      	pop	{r7, pc}
 8000858:	20018000 	.word	0x20018000
 800085c:	00000400 	.word	0x00000400
 8000860:	20000088 	.word	0x20000088
 8000864:	20000160 	.word	0x20000160

08000868 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000868:	b480      	push	{r7}
 800086a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800086c:	4b06      	ldr	r3, [pc, #24]	; (8000888 <SystemInit+0x20>)
 800086e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000872:	4a05      	ldr	r2, [pc, #20]	; (8000888 <SystemInit+0x20>)
 8000874:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000878:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800087c:	bf00      	nop
 800087e:	46bd      	mov	sp, r7
 8000880:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000884:	4770      	bx	lr
 8000886:	bf00      	nop
 8000888:	e000ed00 	.word	0xe000ed00

0800088c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 800088c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80008c4 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000890:	480d      	ldr	r0, [pc, #52]	; (80008c8 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8000892:	490e      	ldr	r1, [pc, #56]	; (80008cc <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000894:	4a0e      	ldr	r2, [pc, #56]	; (80008d0 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000896:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000898:	e002      	b.n	80008a0 <LoopCopyDataInit>

0800089a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800089a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800089c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800089e:	3304      	adds	r3, #4

080008a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80008a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80008a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80008a4:	d3f9      	bcc.n	800089a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80008a6:	4a0b      	ldr	r2, [pc, #44]	; (80008d4 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80008a8:	4c0b      	ldr	r4, [pc, #44]	; (80008d8 <LoopFillZerobss+0x26>)
  movs r3, #0
 80008aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80008ac:	e001      	b.n	80008b2 <LoopFillZerobss>

080008ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80008ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80008b0:	3204      	adds	r2, #4

080008b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80008b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80008b4:	d3fb      	bcc.n	80008ae <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80008b6:	f7ff ffd7 	bl	8000868 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80008ba:	f000 f817 	bl	80008ec <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80008be:	f7ff ff7b 	bl	80007b8 <main>
  bx  lr    
 80008c2:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 80008c4:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80008c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80008cc:	2000006c 	.word	0x2000006c
  ldr r2, =_sidata
 80008d0:	08001f18 	.word	0x08001f18
  ldr r2, =_sbss
 80008d4:	2000006c 	.word	0x2000006c
  ldr r4, =_ebss
 80008d8:	20000160 	.word	0x20000160

080008dc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80008dc:	e7fe      	b.n	80008dc <ADC_IRQHandler>
	...

080008e0 <__errno>:
 80008e0:	4b01      	ldr	r3, [pc, #4]	; (80008e8 <__errno+0x8>)
 80008e2:	6818      	ldr	r0, [r3, #0]
 80008e4:	4770      	bx	lr
 80008e6:	bf00      	nop
 80008e8:	20000000 	.word	0x20000000

080008ec <__libc_init_array>:
 80008ec:	b570      	push	{r4, r5, r6, lr}
 80008ee:	4d0d      	ldr	r5, [pc, #52]	; (8000924 <__libc_init_array+0x38>)
 80008f0:	4c0d      	ldr	r4, [pc, #52]	; (8000928 <__libc_init_array+0x3c>)
 80008f2:	1b64      	subs	r4, r4, r5
 80008f4:	10a4      	asrs	r4, r4, #2
 80008f6:	2600      	movs	r6, #0
 80008f8:	42a6      	cmp	r6, r4
 80008fa:	d109      	bne.n	8000910 <__libc_init_array+0x24>
 80008fc:	4d0b      	ldr	r5, [pc, #44]	; (800092c <__libc_init_array+0x40>)
 80008fe:	4c0c      	ldr	r4, [pc, #48]	; (8000930 <__libc_init_array+0x44>)
 8000900:	f001 fa98 	bl	8001e34 <_init>
 8000904:	1b64      	subs	r4, r4, r5
 8000906:	10a4      	asrs	r4, r4, #2
 8000908:	2600      	movs	r6, #0
 800090a:	42a6      	cmp	r6, r4
 800090c:	d105      	bne.n	800091a <__libc_init_array+0x2e>
 800090e:	bd70      	pop	{r4, r5, r6, pc}
 8000910:	f855 3b04 	ldr.w	r3, [r5], #4
 8000914:	4798      	blx	r3
 8000916:	3601      	adds	r6, #1
 8000918:	e7ee      	b.n	80008f8 <__libc_init_array+0xc>
 800091a:	f855 3b04 	ldr.w	r3, [r5], #4
 800091e:	4798      	blx	r3
 8000920:	3601      	adds	r6, #1
 8000922:	e7f2      	b.n	800090a <__libc_init_array+0x1e>
 8000924:	08001f10 	.word	0x08001f10
 8000928:	08001f10 	.word	0x08001f10
 800092c:	08001f10 	.word	0x08001f10
 8000930:	08001f14 	.word	0x08001f14

08000934 <memset>:
 8000934:	4402      	add	r2, r0
 8000936:	4603      	mov	r3, r0
 8000938:	4293      	cmp	r3, r2
 800093a:	d100      	bne.n	800093e <memset+0xa>
 800093c:	4770      	bx	lr
 800093e:	f803 1b01 	strb.w	r1, [r3], #1
 8000942:	e7f9      	b.n	8000938 <memset+0x4>

08000944 <iprintf>:
 8000944:	b40f      	push	{r0, r1, r2, r3}
 8000946:	4b0a      	ldr	r3, [pc, #40]	; (8000970 <iprintf+0x2c>)
 8000948:	b513      	push	{r0, r1, r4, lr}
 800094a:	681c      	ldr	r4, [r3, #0]
 800094c:	b124      	cbz	r4, 8000958 <iprintf+0x14>
 800094e:	69a3      	ldr	r3, [r4, #24]
 8000950:	b913      	cbnz	r3, 8000958 <iprintf+0x14>
 8000952:	4620      	mov	r0, r4
 8000954:	f000 fa5e 	bl	8000e14 <__sinit>
 8000958:	ab05      	add	r3, sp, #20
 800095a:	9a04      	ldr	r2, [sp, #16]
 800095c:	68a1      	ldr	r1, [r4, #8]
 800095e:	9301      	str	r3, [sp, #4]
 8000960:	4620      	mov	r0, r4
 8000962:	f000 fc2f 	bl	80011c4 <_vfiprintf_r>
 8000966:	b002      	add	sp, #8
 8000968:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800096c:	b004      	add	sp, #16
 800096e:	4770      	bx	lr
 8000970:	20000000 	.word	0x20000000

08000974 <_puts_r>:
 8000974:	b570      	push	{r4, r5, r6, lr}
 8000976:	460e      	mov	r6, r1
 8000978:	4605      	mov	r5, r0
 800097a:	b118      	cbz	r0, 8000984 <_puts_r+0x10>
 800097c:	6983      	ldr	r3, [r0, #24]
 800097e:	b90b      	cbnz	r3, 8000984 <_puts_r+0x10>
 8000980:	f000 fa48 	bl	8000e14 <__sinit>
 8000984:	69ab      	ldr	r3, [r5, #24]
 8000986:	68ac      	ldr	r4, [r5, #8]
 8000988:	b913      	cbnz	r3, 8000990 <_puts_r+0x1c>
 800098a:	4628      	mov	r0, r5
 800098c:	f000 fa42 	bl	8000e14 <__sinit>
 8000990:	4b2c      	ldr	r3, [pc, #176]	; (8000a44 <_puts_r+0xd0>)
 8000992:	429c      	cmp	r4, r3
 8000994:	d120      	bne.n	80009d8 <_puts_r+0x64>
 8000996:	686c      	ldr	r4, [r5, #4]
 8000998:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800099a:	07db      	lsls	r3, r3, #31
 800099c:	d405      	bmi.n	80009aa <_puts_r+0x36>
 800099e:	89a3      	ldrh	r3, [r4, #12]
 80009a0:	0598      	lsls	r0, r3, #22
 80009a2:	d402      	bmi.n	80009aa <_puts_r+0x36>
 80009a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009a6:	f000 fad3 	bl	8000f50 <__retarget_lock_acquire_recursive>
 80009aa:	89a3      	ldrh	r3, [r4, #12]
 80009ac:	0719      	lsls	r1, r3, #28
 80009ae:	d51d      	bpl.n	80009ec <_puts_r+0x78>
 80009b0:	6923      	ldr	r3, [r4, #16]
 80009b2:	b1db      	cbz	r3, 80009ec <_puts_r+0x78>
 80009b4:	3e01      	subs	r6, #1
 80009b6:	68a3      	ldr	r3, [r4, #8]
 80009b8:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80009bc:	3b01      	subs	r3, #1
 80009be:	60a3      	str	r3, [r4, #8]
 80009c0:	bb39      	cbnz	r1, 8000a12 <_puts_r+0x9e>
 80009c2:	2b00      	cmp	r3, #0
 80009c4:	da38      	bge.n	8000a38 <_puts_r+0xc4>
 80009c6:	4622      	mov	r2, r4
 80009c8:	210a      	movs	r1, #10
 80009ca:	4628      	mov	r0, r5
 80009cc:	f000 f848 	bl	8000a60 <__swbuf_r>
 80009d0:	3001      	adds	r0, #1
 80009d2:	d011      	beq.n	80009f8 <_puts_r+0x84>
 80009d4:	250a      	movs	r5, #10
 80009d6:	e011      	b.n	80009fc <_puts_r+0x88>
 80009d8:	4b1b      	ldr	r3, [pc, #108]	; (8000a48 <_puts_r+0xd4>)
 80009da:	429c      	cmp	r4, r3
 80009dc:	d101      	bne.n	80009e2 <_puts_r+0x6e>
 80009de:	68ac      	ldr	r4, [r5, #8]
 80009e0:	e7da      	b.n	8000998 <_puts_r+0x24>
 80009e2:	4b1a      	ldr	r3, [pc, #104]	; (8000a4c <_puts_r+0xd8>)
 80009e4:	429c      	cmp	r4, r3
 80009e6:	bf08      	it	eq
 80009e8:	68ec      	ldreq	r4, [r5, #12]
 80009ea:	e7d5      	b.n	8000998 <_puts_r+0x24>
 80009ec:	4621      	mov	r1, r4
 80009ee:	4628      	mov	r0, r5
 80009f0:	f000 f888 	bl	8000b04 <__swsetup_r>
 80009f4:	2800      	cmp	r0, #0
 80009f6:	d0dd      	beq.n	80009b4 <_puts_r+0x40>
 80009f8:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80009fc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80009fe:	07da      	lsls	r2, r3, #31
 8000a00:	d405      	bmi.n	8000a0e <_puts_r+0x9a>
 8000a02:	89a3      	ldrh	r3, [r4, #12]
 8000a04:	059b      	lsls	r3, r3, #22
 8000a06:	d402      	bmi.n	8000a0e <_puts_r+0x9a>
 8000a08:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000a0a:	f000 faa2 	bl	8000f52 <__retarget_lock_release_recursive>
 8000a0e:	4628      	mov	r0, r5
 8000a10:	bd70      	pop	{r4, r5, r6, pc}
 8000a12:	2b00      	cmp	r3, #0
 8000a14:	da04      	bge.n	8000a20 <_puts_r+0xac>
 8000a16:	69a2      	ldr	r2, [r4, #24]
 8000a18:	429a      	cmp	r2, r3
 8000a1a:	dc06      	bgt.n	8000a2a <_puts_r+0xb6>
 8000a1c:	290a      	cmp	r1, #10
 8000a1e:	d004      	beq.n	8000a2a <_puts_r+0xb6>
 8000a20:	6823      	ldr	r3, [r4, #0]
 8000a22:	1c5a      	adds	r2, r3, #1
 8000a24:	6022      	str	r2, [r4, #0]
 8000a26:	7019      	strb	r1, [r3, #0]
 8000a28:	e7c5      	b.n	80009b6 <_puts_r+0x42>
 8000a2a:	4622      	mov	r2, r4
 8000a2c:	4628      	mov	r0, r5
 8000a2e:	f000 f817 	bl	8000a60 <__swbuf_r>
 8000a32:	3001      	adds	r0, #1
 8000a34:	d1bf      	bne.n	80009b6 <_puts_r+0x42>
 8000a36:	e7df      	b.n	80009f8 <_puts_r+0x84>
 8000a38:	6823      	ldr	r3, [r4, #0]
 8000a3a:	250a      	movs	r5, #10
 8000a3c:	1c5a      	adds	r2, r3, #1
 8000a3e:	6022      	str	r2, [r4, #0]
 8000a40:	701d      	strb	r5, [r3, #0]
 8000a42:	e7db      	b.n	80009fc <_puts_r+0x88>
 8000a44:	08001e80 	.word	0x08001e80
 8000a48:	08001ea0 	.word	0x08001ea0
 8000a4c:	08001e60 	.word	0x08001e60

08000a50 <puts>:
 8000a50:	4b02      	ldr	r3, [pc, #8]	; (8000a5c <puts+0xc>)
 8000a52:	4601      	mov	r1, r0
 8000a54:	6818      	ldr	r0, [r3, #0]
 8000a56:	f7ff bf8d 	b.w	8000974 <_puts_r>
 8000a5a:	bf00      	nop
 8000a5c:	20000000 	.word	0x20000000

08000a60 <__swbuf_r>:
 8000a60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a62:	460e      	mov	r6, r1
 8000a64:	4614      	mov	r4, r2
 8000a66:	4605      	mov	r5, r0
 8000a68:	b118      	cbz	r0, 8000a72 <__swbuf_r+0x12>
 8000a6a:	6983      	ldr	r3, [r0, #24]
 8000a6c:	b90b      	cbnz	r3, 8000a72 <__swbuf_r+0x12>
 8000a6e:	f000 f9d1 	bl	8000e14 <__sinit>
 8000a72:	4b21      	ldr	r3, [pc, #132]	; (8000af8 <__swbuf_r+0x98>)
 8000a74:	429c      	cmp	r4, r3
 8000a76:	d12b      	bne.n	8000ad0 <__swbuf_r+0x70>
 8000a78:	686c      	ldr	r4, [r5, #4]
 8000a7a:	69a3      	ldr	r3, [r4, #24]
 8000a7c:	60a3      	str	r3, [r4, #8]
 8000a7e:	89a3      	ldrh	r3, [r4, #12]
 8000a80:	071a      	lsls	r2, r3, #28
 8000a82:	d52f      	bpl.n	8000ae4 <__swbuf_r+0x84>
 8000a84:	6923      	ldr	r3, [r4, #16]
 8000a86:	b36b      	cbz	r3, 8000ae4 <__swbuf_r+0x84>
 8000a88:	6923      	ldr	r3, [r4, #16]
 8000a8a:	6820      	ldr	r0, [r4, #0]
 8000a8c:	1ac0      	subs	r0, r0, r3
 8000a8e:	6963      	ldr	r3, [r4, #20]
 8000a90:	b2f6      	uxtb	r6, r6
 8000a92:	4283      	cmp	r3, r0
 8000a94:	4637      	mov	r7, r6
 8000a96:	dc04      	bgt.n	8000aa2 <__swbuf_r+0x42>
 8000a98:	4621      	mov	r1, r4
 8000a9a:	4628      	mov	r0, r5
 8000a9c:	f000 f926 	bl	8000cec <_fflush_r>
 8000aa0:	bb30      	cbnz	r0, 8000af0 <__swbuf_r+0x90>
 8000aa2:	68a3      	ldr	r3, [r4, #8]
 8000aa4:	3b01      	subs	r3, #1
 8000aa6:	60a3      	str	r3, [r4, #8]
 8000aa8:	6823      	ldr	r3, [r4, #0]
 8000aaa:	1c5a      	adds	r2, r3, #1
 8000aac:	6022      	str	r2, [r4, #0]
 8000aae:	701e      	strb	r6, [r3, #0]
 8000ab0:	6963      	ldr	r3, [r4, #20]
 8000ab2:	3001      	adds	r0, #1
 8000ab4:	4283      	cmp	r3, r0
 8000ab6:	d004      	beq.n	8000ac2 <__swbuf_r+0x62>
 8000ab8:	89a3      	ldrh	r3, [r4, #12]
 8000aba:	07db      	lsls	r3, r3, #31
 8000abc:	d506      	bpl.n	8000acc <__swbuf_r+0x6c>
 8000abe:	2e0a      	cmp	r6, #10
 8000ac0:	d104      	bne.n	8000acc <__swbuf_r+0x6c>
 8000ac2:	4621      	mov	r1, r4
 8000ac4:	4628      	mov	r0, r5
 8000ac6:	f000 f911 	bl	8000cec <_fflush_r>
 8000aca:	b988      	cbnz	r0, 8000af0 <__swbuf_r+0x90>
 8000acc:	4638      	mov	r0, r7
 8000ace:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ad0:	4b0a      	ldr	r3, [pc, #40]	; (8000afc <__swbuf_r+0x9c>)
 8000ad2:	429c      	cmp	r4, r3
 8000ad4:	d101      	bne.n	8000ada <__swbuf_r+0x7a>
 8000ad6:	68ac      	ldr	r4, [r5, #8]
 8000ad8:	e7cf      	b.n	8000a7a <__swbuf_r+0x1a>
 8000ada:	4b09      	ldr	r3, [pc, #36]	; (8000b00 <__swbuf_r+0xa0>)
 8000adc:	429c      	cmp	r4, r3
 8000ade:	bf08      	it	eq
 8000ae0:	68ec      	ldreq	r4, [r5, #12]
 8000ae2:	e7ca      	b.n	8000a7a <__swbuf_r+0x1a>
 8000ae4:	4621      	mov	r1, r4
 8000ae6:	4628      	mov	r0, r5
 8000ae8:	f000 f80c 	bl	8000b04 <__swsetup_r>
 8000aec:	2800      	cmp	r0, #0
 8000aee:	d0cb      	beq.n	8000a88 <__swbuf_r+0x28>
 8000af0:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000af4:	e7ea      	b.n	8000acc <__swbuf_r+0x6c>
 8000af6:	bf00      	nop
 8000af8:	08001e80 	.word	0x08001e80
 8000afc:	08001ea0 	.word	0x08001ea0
 8000b00:	08001e60 	.word	0x08001e60

08000b04 <__swsetup_r>:
 8000b04:	4b32      	ldr	r3, [pc, #200]	; (8000bd0 <__swsetup_r+0xcc>)
 8000b06:	b570      	push	{r4, r5, r6, lr}
 8000b08:	681d      	ldr	r5, [r3, #0]
 8000b0a:	4606      	mov	r6, r0
 8000b0c:	460c      	mov	r4, r1
 8000b0e:	b125      	cbz	r5, 8000b1a <__swsetup_r+0x16>
 8000b10:	69ab      	ldr	r3, [r5, #24]
 8000b12:	b913      	cbnz	r3, 8000b1a <__swsetup_r+0x16>
 8000b14:	4628      	mov	r0, r5
 8000b16:	f000 f97d 	bl	8000e14 <__sinit>
 8000b1a:	4b2e      	ldr	r3, [pc, #184]	; (8000bd4 <__swsetup_r+0xd0>)
 8000b1c:	429c      	cmp	r4, r3
 8000b1e:	d10f      	bne.n	8000b40 <__swsetup_r+0x3c>
 8000b20:	686c      	ldr	r4, [r5, #4]
 8000b22:	89a3      	ldrh	r3, [r4, #12]
 8000b24:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000b28:	0719      	lsls	r1, r3, #28
 8000b2a:	d42c      	bmi.n	8000b86 <__swsetup_r+0x82>
 8000b2c:	06dd      	lsls	r5, r3, #27
 8000b2e:	d411      	bmi.n	8000b54 <__swsetup_r+0x50>
 8000b30:	2309      	movs	r3, #9
 8000b32:	6033      	str	r3, [r6, #0]
 8000b34:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000b38:	81a3      	strh	r3, [r4, #12]
 8000b3a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000b3e:	e03e      	b.n	8000bbe <__swsetup_r+0xba>
 8000b40:	4b25      	ldr	r3, [pc, #148]	; (8000bd8 <__swsetup_r+0xd4>)
 8000b42:	429c      	cmp	r4, r3
 8000b44:	d101      	bne.n	8000b4a <__swsetup_r+0x46>
 8000b46:	68ac      	ldr	r4, [r5, #8]
 8000b48:	e7eb      	b.n	8000b22 <__swsetup_r+0x1e>
 8000b4a:	4b24      	ldr	r3, [pc, #144]	; (8000bdc <__swsetup_r+0xd8>)
 8000b4c:	429c      	cmp	r4, r3
 8000b4e:	bf08      	it	eq
 8000b50:	68ec      	ldreq	r4, [r5, #12]
 8000b52:	e7e6      	b.n	8000b22 <__swsetup_r+0x1e>
 8000b54:	0758      	lsls	r0, r3, #29
 8000b56:	d512      	bpl.n	8000b7e <__swsetup_r+0x7a>
 8000b58:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000b5a:	b141      	cbz	r1, 8000b6e <__swsetup_r+0x6a>
 8000b5c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000b60:	4299      	cmp	r1, r3
 8000b62:	d002      	beq.n	8000b6a <__swsetup_r+0x66>
 8000b64:	4630      	mov	r0, r6
 8000b66:	f000 fa59 	bl	800101c <_free_r>
 8000b6a:	2300      	movs	r3, #0
 8000b6c:	6363      	str	r3, [r4, #52]	; 0x34
 8000b6e:	89a3      	ldrh	r3, [r4, #12]
 8000b70:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000b74:	81a3      	strh	r3, [r4, #12]
 8000b76:	2300      	movs	r3, #0
 8000b78:	6063      	str	r3, [r4, #4]
 8000b7a:	6923      	ldr	r3, [r4, #16]
 8000b7c:	6023      	str	r3, [r4, #0]
 8000b7e:	89a3      	ldrh	r3, [r4, #12]
 8000b80:	f043 0308 	orr.w	r3, r3, #8
 8000b84:	81a3      	strh	r3, [r4, #12]
 8000b86:	6923      	ldr	r3, [r4, #16]
 8000b88:	b94b      	cbnz	r3, 8000b9e <__swsetup_r+0x9a>
 8000b8a:	89a3      	ldrh	r3, [r4, #12]
 8000b8c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000b90:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000b94:	d003      	beq.n	8000b9e <__swsetup_r+0x9a>
 8000b96:	4621      	mov	r1, r4
 8000b98:	4630      	mov	r0, r6
 8000b9a:	f000 f9ff 	bl	8000f9c <__smakebuf_r>
 8000b9e:	89a0      	ldrh	r0, [r4, #12]
 8000ba0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000ba4:	f010 0301 	ands.w	r3, r0, #1
 8000ba8:	d00a      	beq.n	8000bc0 <__swsetup_r+0xbc>
 8000baa:	2300      	movs	r3, #0
 8000bac:	60a3      	str	r3, [r4, #8]
 8000bae:	6963      	ldr	r3, [r4, #20]
 8000bb0:	425b      	negs	r3, r3
 8000bb2:	61a3      	str	r3, [r4, #24]
 8000bb4:	6923      	ldr	r3, [r4, #16]
 8000bb6:	b943      	cbnz	r3, 8000bca <__swsetup_r+0xc6>
 8000bb8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000bbc:	d1ba      	bne.n	8000b34 <__swsetup_r+0x30>
 8000bbe:	bd70      	pop	{r4, r5, r6, pc}
 8000bc0:	0781      	lsls	r1, r0, #30
 8000bc2:	bf58      	it	pl
 8000bc4:	6963      	ldrpl	r3, [r4, #20]
 8000bc6:	60a3      	str	r3, [r4, #8]
 8000bc8:	e7f4      	b.n	8000bb4 <__swsetup_r+0xb0>
 8000bca:	2000      	movs	r0, #0
 8000bcc:	e7f7      	b.n	8000bbe <__swsetup_r+0xba>
 8000bce:	bf00      	nop
 8000bd0:	20000000 	.word	0x20000000
 8000bd4:	08001e80 	.word	0x08001e80
 8000bd8:	08001ea0 	.word	0x08001ea0
 8000bdc:	08001e60 	.word	0x08001e60

08000be0 <__sflush_r>:
 8000be0:	898a      	ldrh	r2, [r1, #12]
 8000be2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000be6:	4605      	mov	r5, r0
 8000be8:	0710      	lsls	r0, r2, #28
 8000bea:	460c      	mov	r4, r1
 8000bec:	d458      	bmi.n	8000ca0 <__sflush_r+0xc0>
 8000bee:	684b      	ldr	r3, [r1, #4]
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	dc05      	bgt.n	8000c00 <__sflush_r+0x20>
 8000bf4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000bf6:	2b00      	cmp	r3, #0
 8000bf8:	dc02      	bgt.n	8000c00 <__sflush_r+0x20>
 8000bfa:	2000      	movs	r0, #0
 8000bfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c00:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000c02:	2e00      	cmp	r6, #0
 8000c04:	d0f9      	beq.n	8000bfa <__sflush_r+0x1a>
 8000c06:	2300      	movs	r3, #0
 8000c08:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000c0c:	682f      	ldr	r7, [r5, #0]
 8000c0e:	602b      	str	r3, [r5, #0]
 8000c10:	d032      	beq.n	8000c78 <__sflush_r+0x98>
 8000c12:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000c14:	89a3      	ldrh	r3, [r4, #12]
 8000c16:	075a      	lsls	r2, r3, #29
 8000c18:	d505      	bpl.n	8000c26 <__sflush_r+0x46>
 8000c1a:	6863      	ldr	r3, [r4, #4]
 8000c1c:	1ac0      	subs	r0, r0, r3
 8000c1e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000c20:	b10b      	cbz	r3, 8000c26 <__sflush_r+0x46>
 8000c22:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000c24:	1ac0      	subs	r0, r0, r3
 8000c26:	2300      	movs	r3, #0
 8000c28:	4602      	mov	r2, r0
 8000c2a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000c2c:	6a21      	ldr	r1, [r4, #32]
 8000c2e:	4628      	mov	r0, r5
 8000c30:	47b0      	blx	r6
 8000c32:	1c43      	adds	r3, r0, #1
 8000c34:	89a3      	ldrh	r3, [r4, #12]
 8000c36:	d106      	bne.n	8000c46 <__sflush_r+0x66>
 8000c38:	6829      	ldr	r1, [r5, #0]
 8000c3a:	291d      	cmp	r1, #29
 8000c3c:	d82c      	bhi.n	8000c98 <__sflush_r+0xb8>
 8000c3e:	4a2a      	ldr	r2, [pc, #168]	; (8000ce8 <__sflush_r+0x108>)
 8000c40:	40ca      	lsrs	r2, r1
 8000c42:	07d6      	lsls	r6, r2, #31
 8000c44:	d528      	bpl.n	8000c98 <__sflush_r+0xb8>
 8000c46:	2200      	movs	r2, #0
 8000c48:	6062      	str	r2, [r4, #4]
 8000c4a:	04d9      	lsls	r1, r3, #19
 8000c4c:	6922      	ldr	r2, [r4, #16]
 8000c4e:	6022      	str	r2, [r4, #0]
 8000c50:	d504      	bpl.n	8000c5c <__sflush_r+0x7c>
 8000c52:	1c42      	adds	r2, r0, #1
 8000c54:	d101      	bne.n	8000c5a <__sflush_r+0x7a>
 8000c56:	682b      	ldr	r3, [r5, #0]
 8000c58:	b903      	cbnz	r3, 8000c5c <__sflush_r+0x7c>
 8000c5a:	6560      	str	r0, [r4, #84]	; 0x54
 8000c5c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000c5e:	602f      	str	r7, [r5, #0]
 8000c60:	2900      	cmp	r1, #0
 8000c62:	d0ca      	beq.n	8000bfa <__sflush_r+0x1a>
 8000c64:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000c68:	4299      	cmp	r1, r3
 8000c6a:	d002      	beq.n	8000c72 <__sflush_r+0x92>
 8000c6c:	4628      	mov	r0, r5
 8000c6e:	f000 f9d5 	bl	800101c <_free_r>
 8000c72:	2000      	movs	r0, #0
 8000c74:	6360      	str	r0, [r4, #52]	; 0x34
 8000c76:	e7c1      	b.n	8000bfc <__sflush_r+0x1c>
 8000c78:	6a21      	ldr	r1, [r4, #32]
 8000c7a:	2301      	movs	r3, #1
 8000c7c:	4628      	mov	r0, r5
 8000c7e:	47b0      	blx	r6
 8000c80:	1c41      	adds	r1, r0, #1
 8000c82:	d1c7      	bne.n	8000c14 <__sflush_r+0x34>
 8000c84:	682b      	ldr	r3, [r5, #0]
 8000c86:	2b00      	cmp	r3, #0
 8000c88:	d0c4      	beq.n	8000c14 <__sflush_r+0x34>
 8000c8a:	2b1d      	cmp	r3, #29
 8000c8c:	d001      	beq.n	8000c92 <__sflush_r+0xb2>
 8000c8e:	2b16      	cmp	r3, #22
 8000c90:	d101      	bne.n	8000c96 <__sflush_r+0xb6>
 8000c92:	602f      	str	r7, [r5, #0]
 8000c94:	e7b1      	b.n	8000bfa <__sflush_r+0x1a>
 8000c96:	89a3      	ldrh	r3, [r4, #12]
 8000c98:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000c9c:	81a3      	strh	r3, [r4, #12]
 8000c9e:	e7ad      	b.n	8000bfc <__sflush_r+0x1c>
 8000ca0:	690f      	ldr	r7, [r1, #16]
 8000ca2:	2f00      	cmp	r7, #0
 8000ca4:	d0a9      	beq.n	8000bfa <__sflush_r+0x1a>
 8000ca6:	0793      	lsls	r3, r2, #30
 8000ca8:	680e      	ldr	r6, [r1, #0]
 8000caa:	bf08      	it	eq
 8000cac:	694b      	ldreq	r3, [r1, #20]
 8000cae:	600f      	str	r7, [r1, #0]
 8000cb0:	bf18      	it	ne
 8000cb2:	2300      	movne	r3, #0
 8000cb4:	eba6 0807 	sub.w	r8, r6, r7
 8000cb8:	608b      	str	r3, [r1, #8]
 8000cba:	f1b8 0f00 	cmp.w	r8, #0
 8000cbe:	dd9c      	ble.n	8000bfa <__sflush_r+0x1a>
 8000cc0:	6a21      	ldr	r1, [r4, #32]
 8000cc2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000cc4:	4643      	mov	r3, r8
 8000cc6:	463a      	mov	r2, r7
 8000cc8:	4628      	mov	r0, r5
 8000cca:	47b0      	blx	r6
 8000ccc:	2800      	cmp	r0, #0
 8000cce:	dc06      	bgt.n	8000cde <__sflush_r+0xfe>
 8000cd0:	89a3      	ldrh	r3, [r4, #12]
 8000cd2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000cd6:	81a3      	strh	r3, [r4, #12]
 8000cd8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000cdc:	e78e      	b.n	8000bfc <__sflush_r+0x1c>
 8000cde:	4407      	add	r7, r0
 8000ce0:	eba8 0800 	sub.w	r8, r8, r0
 8000ce4:	e7e9      	b.n	8000cba <__sflush_r+0xda>
 8000ce6:	bf00      	nop
 8000ce8:	20400001 	.word	0x20400001

08000cec <_fflush_r>:
 8000cec:	b538      	push	{r3, r4, r5, lr}
 8000cee:	690b      	ldr	r3, [r1, #16]
 8000cf0:	4605      	mov	r5, r0
 8000cf2:	460c      	mov	r4, r1
 8000cf4:	b913      	cbnz	r3, 8000cfc <_fflush_r+0x10>
 8000cf6:	2500      	movs	r5, #0
 8000cf8:	4628      	mov	r0, r5
 8000cfa:	bd38      	pop	{r3, r4, r5, pc}
 8000cfc:	b118      	cbz	r0, 8000d06 <_fflush_r+0x1a>
 8000cfe:	6983      	ldr	r3, [r0, #24]
 8000d00:	b90b      	cbnz	r3, 8000d06 <_fflush_r+0x1a>
 8000d02:	f000 f887 	bl	8000e14 <__sinit>
 8000d06:	4b14      	ldr	r3, [pc, #80]	; (8000d58 <_fflush_r+0x6c>)
 8000d08:	429c      	cmp	r4, r3
 8000d0a:	d11b      	bne.n	8000d44 <_fflush_r+0x58>
 8000d0c:	686c      	ldr	r4, [r5, #4]
 8000d0e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d12:	2b00      	cmp	r3, #0
 8000d14:	d0ef      	beq.n	8000cf6 <_fflush_r+0xa>
 8000d16:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000d18:	07d0      	lsls	r0, r2, #31
 8000d1a:	d404      	bmi.n	8000d26 <_fflush_r+0x3a>
 8000d1c:	0599      	lsls	r1, r3, #22
 8000d1e:	d402      	bmi.n	8000d26 <_fflush_r+0x3a>
 8000d20:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000d22:	f000 f915 	bl	8000f50 <__retarget_lock_acquire_recursive>
 8000d26:	4628      	mov	r0, r5
 8000d28:	4621      	mov	r1, r4
 8000d2a:	f7ff ff59 	bl	8000be0 <__sflush_r>
 8000d2e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000d30:	07da      	lsls	r2, r3, #31
 8000d32:	4605      	mov	r5, r0
 8000d34:	d4e0      	bmi.n	8000cf8 <_fflush_r+0xc>
 8000d36:	89a3      	ldrh	r3, [r4, #12]
 8000d38:	059b      	lsls	r3, r3, #22
 8000d3a:	d4dd      	bmi.n	8000cf8 <_fflush_r+0xc>
 8000d3c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000d3e:	f000 f908 	bl	8000f52 <__retarget_lock_release_recursive>
 8000d42:	e7d9      	b.n	8000cf8 <_fflush_r+0xc>
 8000d44:	4b05      	ldr	r3, [pc, #20]	; (8000d5c <_fflush_r+0x70>)
 8000d46:	429c      	cmp	r4, r3
 8000d48:	d101      	bne.n	8000d4e <_fflush_r+0x62>
 8000d4a:	68ac      	ldr	r4, [r5, #8]
 8000d4c:	e7df      	b.n	8000d0e <_fflush_r+0x22>
 8000d4e:	4b04      	ldr	r3, [pc, #16]	; (8000d60 <_fflush_r+0x74>)
 8000d50:	429c      	cmp	r4, r3
 8000d52:	bf08      	it	eq
 8000d54:	68ec      	ldreq	r4, [r5, #12]
 8000d56:	e7da      	b.n	8000d0e <_fflush_r+0x22>
 8000d58:	08001e80 	.word	0x08001e80
 8000d5c:	08001ea0 	.word	0x08001ea0
 8000d60:	08001e60 	.word	0x08001e60

08000d64 <std>:
 8000d64:	2300      	movs	r3, #0
 8000d66:	b510      	push	{r4, lr}
 8000d68:	4604      	mov	r4, r0
 8000d6a:	e9c0 3300 	strd	r3, r3, [r0]
 8000d6e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000d72:	6083      	str	r3, [r0, #8]
 8000d74:	8181      	strh	r1, [r0, #12]
 8000d76:	6643      	str	r3, [r0, #100]	; 0x64
 8000d78:	81c2      	strh	r2, [r0, #14]
 8000d7a:	6183      	str	r3, [r0, #24]
 8000d7c:	4619      	mov	r1, r3
 8000d7e:	2208      	movs	r2, #8
 8000d80:	305c      	adds	r0, #92	; 0x5c
 8000d82:	f7ff fdd7 	bl	8000934 <memset>
 8000d86:	4b05      	ldr	r3, [pc, #20]	; (8000d9c <std+0x38>)
 8000d88:	6263      	str	r3, [r4, #36]	; 0x24
 8000d8a:	4b05      	ldr	r3, [pc, #20]	; (8000da0 <std+0x3c>)
 8000d8c:	62a3      	str	r3, [r4, #40]	; 0x28
 8000d8e:	4b05      	ldr	r3, [pc, #20]	; (8000da4 <std+0x40>)
 8000d90:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000d92:	4b05      	ldr	r3, [pc, #20]	; (8000da8 <std+0x44>)
 8000d94:	6224      	str	r4, [r4, #32]
 8000d96:	6323      	str	r3, [r4, #48]	; 0x30
 8000d98:	bd10      	pop	{r4, pc}
 8000d9a:	bf00      	nop
 8000d9c:	0800176d 	.word	0x0800176d
 8000da0:	0800178f 	.word	0x0800178f
 8000da4:	080017c7 	.word	0x080017c7
 8000da8:	080017eb 	.word	0x080017eb

08000dac <_cleanup_r>:
 8000dac:	4901      	ldr	r1, [pc, #4]	; (8000db4 <_cleanup_r+0x8>)
 8000dae:	f000 b8af 	b.w	8000f10 <_fwalk_reent>
 8000db2:	bf00      	nop
 8000db4:	08000ced 	.word	0x08000ced

08000db8 <__sfmoreglue>:
 8000db8:	b570      	push	{r4, r5, r6, lr}
 8000dba:	1e4a      	subs	r2, r1, #1
 8000dbc:	2568      	movs	r5, #104	; 0x68
 8000dbe:	4355      	muls	r5, r2
 8000dc0:	460e      	mov	r6, r1
 8000dc2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000dc6:	f000 f979 	bl	80010bc <_malloc_r>
 8000dca:	4604      	mov	r4, r0
 8000dcc:	b140      	cbz	r0, 8000de0 <__sfmoreglue+0x28>
 8000dce:	2100      	movs	r1, #0
 8000dd0:	e9c0 1600 	strd	r1, r6, [r0]
 8000dd4:	300c      	adds	r0, #12
 8000dd6:	60a0      	str	r0, [r4, #8]
 8000dd8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000ddc:	f7ff fdaa 	bl	8000934 <memset>
 8000de0:	4620      	mov	r0, r4
 8000de2:	bd70      	pop	{r4, r5, r6, pc}

08000de4 <__sfp_lock_acquire>:
 8000de4:	4801      	ldr	r0, [pc, #4]	; (8000dec <__sfp_lock_acquire+0x8>)
 8000de6:	f000 b8b3 	b.w	8000f50 <__retarget_lock_acquire_recursive>
 8000dea:	bf00      	nop
 8000dec:	20000158 	.word	0x20000158

08000df0 <__sfp_lock_release>:
 8000df0:	4801      	ldr	r0, [pc, #4]	; (8000df8 <__sfp_lock_release+0x8>)
 8000df2:	f000 b8ae 	b.w	8000f52 <__retarget_lock_release_recursive>
 8000df6:	bf00      	nop
 8000df8:	20000158 	.word	0x20000158

08000dfc <__sinit_lock_acquire>:
 8000dfc:	4801      	ldr	r0, [pc, #4]	; (8000e04 <__sinit_lock_acquire+0x8>)
 8000dfe:	f000 b8a7 	b.w	8000f50 <__retarget_lock_acquire_recursive>
 8000e02:	bf00      	nop
 8000e04:	20000153 	.word	0x20000153

08000e08 <__sinit_lock_release>:
 8000e08:	4801      	ldr	r0, [pc, #4]	; (8000e10 <__sinit_lock_release+0x8>)
 8000e0a:	f000 b8a2 	b.w	8000f52 <__retarget_lock_release_recursive>
 8000e0e:	bf00      	nop
 8000e10:	20000153 	.word	0x20000153

08000e14 <__sinit>:
 8000e14:	b510      	push	{r4, lr}
 8000e16:	4604      	mov	r4, r0
 8000e18:	f7ff fff0 	bl	8000dfc <__sinit_lock_acquire>
 8000e1c:	69a3      	ldr	r3, [r4, #24]
 8000e1e:	b11b      	cbz	r3, 8000e28 <__sinit+0x14>
 8000e20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000e24:	f7ff bff0 	b.w	8000e08 <__sinit_lock_release>
 8000e28:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000e2c:	6523      	str	r3, [r4, #80]	; 0x50
 8000e2e:	4b13      	ldr	r3, [pc, #76]	; (8000e7c <__sinit+0x68>)
 8000e30:	4a13      	ldr	r2, [pc, #76]	; (8000e80 <__sinit+0x6c>)
 8000e32:	681b      	ldr	r3, [r3, #0]
 8000e34:	62a2      	str	r2, [r4, #40]	; 0x28
 8000e36:	42a3      	cmp	r3, r4
 8000e38:	bf04      	itt	eq
 8000e3a:	2301      	moveq	r3, #1
 8000e3c:	61a3      	streq	r3, [r4, #24]
 8000e3e:	4620      	mov	r0, r4
 8000e40:	f000 f820 	bl	8000e84 <__sfp>
 8000e44:	6060      	str	r0, [r4, #4]
 8000e46:	4620      	mov	r0, r4
 8000e48:	f000 f81c 	bl	8000e84 <__sfp>
 8000e4c:	60a0      	str	r0, [r4, #8]
 8000e4e:	4620      	mov	r0, r4
 8000e50:	f000 f818 	bl	8000e84 <__sfp>
 8000e54:	2200      	movs	r2, #0
 8000e56:	60e0      	str	r0, [r4, #12]
 8000e58:	2104      	movs	r1, #4
 8000e5a:	6860      	ldr	r0, [r4, #4]
 8000e5c:	f7ff ff82 	bl	8000d64 <std>
 8000e60:	68a0      	ldr	r0, [r4, #8]
 8000e62:	2201      	movs	r2, #1
 8000e64:	2109      	movs	r1, #9
 8000e66:	f7ff ff7d 	bl	8000d64 <std>
 8000e6a:	68e0      	ldr	r0, [r4, #12]
 8000e6c:	2202      	movs	r2, #2
 8000e6e:	2112      	movs	r1, #18
 8000e70:	f7ff ff78 	bl	8000d64 <std>
 8000e74:	2301      	movs	r3, #1
 8000e76:	61a3      	str	r3, [r4, #24]
 8000e78:	e7d2      	b.n	8000e20 <__sinit+0xc>
 8000e7a:	bf00      	nop
 8000e7c:	08001e5c 	.word	0x08001e5c
 8000e80:	08000dad 	.word	0x08000dad

08000e84 <__sfp>:
 8000e84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e86:	4607      	mov	r7, r0
 8000e88:	f7ff ffac 	bl	8000de4 <__sfp_lock_acquire>
 8000e8c:	4b1e      	ldr	r3, [pc, #120]	; (8000f08 <__sfp+0x84>)
 8000e8e:	681e      	ldr	r6, [r3, #0]
 8000e90:	69b3      	ldr	r3, [r6, #24]
 8000e92:	b913      	cbnz	r3, 8000e9a <__sfp+0x16>
 8000e94:	4630      	mov	r0, r6
 8000e96:	f7ff ffbd 	bl	8000e14 <__sinit>
 8000e9a:	3648      	adds	r6, #72	; 0x48
 8000e9c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000ea0:	3b01      	subs	r3, #1
 8000ea2:	d503      	bpl.n	8000eac <__sfp+0x28>
 8000ea4:	6833      	ldr	r3, [r6, #0]
 8000ea6:	b30b      	cbz	r3, 8000eec <__sfp+0x68>
 8000ea8:	6836      	ldr	r6, [r6, #0]
 8000eaa:	e7f7      	b.n	8000e9c <__sfp+0x18>
 8000eac:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000eb0:	b9d5      	cbnz	r5, 8000ee8 <__sfp+0x64>
 8000eb2:	4b16      	ldr	r3, [pc, #88]	; (8000f0c <__sfp+0x88>)
 8000eb4:	60e3      	str	r3, [r4, #12]
 8000eb6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000eba:	6665      	str	r5, [r4, #100]	; 0x64
 8000ebc:	f000 f847 	bl	8000f4e <__retarget_lock_init_recursive>
 8000ec0:	f7ff ff96 	bl	8000df0 <__sfp_lock_release>
 8000ec4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000ec8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000ecc:	6025      	str	r5, [r4, #0]
 8000ece:	61a5      	str	r5, [r4, #24]
 8000ed0:	2208      	movs	r2, #8
 8000ed2:	4629      	mov	r1, r5
 8000ed4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000ed8:	f7ff fd2c 	bl	8000934 <memset>
 8000edc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000ee0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000ee4:	4620      	mov	r0, r4
 8000ee6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ee8:	3468      	adds	r4, #104	; 0x68
 8000eea:	e7d9      	b.n	8000ea0 <__sfp+0x1c>
 8000eec:	2104      	movs	r1, #4
 8000eee:	4638      	mov	r0, r7
 8000ef0:	f7ff ff62 	bl	8000db8 <__sfmoreglue>
 8000ef4:	4604      	mov	r4, r0
 8000ef6:	6030      	str	r0, [r6, #0]
 8000ef8:	2800      	cmp	r0, #0
 8000efa:	d1d5      	bne.n	8000ea8 <__sfp+0x24>
 8000efc:	f7ff ff78 	bl	8000df0 <__sfp_lock_release>
 8000f00:	230c      	movs	r3, #12
 8000f02:	603b      	str	r3, [r7, #0]
 8000f04:	e7ee      	b.n	8000ee4 <__sfp+0x60>
 8000f06:	bf00      	nop
 8000f08:	08001e5c 	.word	0x08001e5c
 8000f0c:	ffff0001 	.word	0xffff0001

08000f10 <_fwalk_reent>:
 8000f10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000f14:	4606      	mov	r6, r0
 8000f16:	4688      	mov	r8, r1
 8000f18:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000f1c:	2700      	movs	r7, #0
 8000f1e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000f22:	f1b9 0901 	subs.w	r9, r9, #1
 8000f26:	d505      	bpl.n	8000f34 <_fwalk_reent+0x24>
 8000f28:	6824      	ldr	r4, [r4, #0]
 8000f2a:	2c00      	cmp	r4, #0
 8000f2c:	d1f7      	bne.n	8000f1e <_fwalk_reent+0xe>
 8000f2e:	4638      	mov	r0, r7
 8000f30:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000f34:	89ab      	ldrh	r3, [r5, #12]
 8000f36:	2b01      	cmp	r3, #1
 8000f38:	d907      	bls.n	8000f4a <_fwalk_reent+0x3a>
 8000f3a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000f3e:	3301      	adds	r3, #1
 8000f40:	d003      	beq.n	8000f4a <_fwalk_reent+0x3a>
 8000f42:	4629      	mov	r1, r5
 8000f44:	4630      	mov	r0, r6
 8000f46:	47c0      	blx	r8
 8000f48:	4307      	orrs	r7, r0
 8000f4a:	3568      	adds	r5, #104	; 0x68
 8000f4c:	e7e9      	b.n	8000f22 <_fwalk_reent+0x12>

08000f4e <__retarget_lock_init_recursive>:
 8000f4e:	4770      	bx	lr

08000f50 <__retarget_lock_acquire_recursive>:
 8000f50:	4770      	bx	lr

08000f52 <__retarget_lock_release_recursive>:
 8000f52:	4770      	bx	lr

08000f54 <__swhatbuf_r>:
 8000f54:	b570      	push	{r4, r5, r6, lr}
 8000f56:	460e      	mov	r6, r1
 8000f58:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f5c:	2900      	cmp	r1, #0
 8000f5e:	b096      	sub	sp, #88	; 0x58
 8000f60:	4614      	mov	r4, r2
 8000f62:	461d      	mov	r5, r3
 8000f64:	da07      	bge.n	8000f76 <__swhatbuf_r+0x22>
 8000f66:	2300      	movs	r3, #0
 8000f68:	602b      	str	r3, [r5, #0]
 8000f6a:	89b3      	ldrh	r3, [r6, #12]
 8000f6c:	061a      	lsls	r2, r3, #24
 8000f6e:	d410      	bmi.n	8000f92 <__swhatbuf_r+0x3e>
 8000f70:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000f74:	e00e      	b.n	8000f94 <__swhatbuf_r+0x40>
 8000f76:	466a      	mov	r2, sp
 8000f78:	f000 fc5e 	bl	8001838 <_fstat_r>
 8000f7c:	2800      	cmp	r0, #0
 8000f7e:	dbf2      	blt.n	8000f66 <__swhatbuf_r+0x12>
 8000f80:	9a01      	ldr	r2, [sp, #4]
 8000f82:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000f86:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000f8a:	425a      	negs	r2, r3
 8000f8c:	415a      	adcs	r2, r3
 8000f8e:	602a      	str	r2, [r5, #0]
 8000f90:	e7ee      	b.n	8000f70 <__swhatbuf_r+0x1c>
 8000f92:	2340      	movs	r3, #64	; 0x40
 8000f94:	2000      	movs	r0, #0
 8000f96:	6023      	str	r3, [r4, #0]
 8000f98:	b016      	add	sp, #88	; 0x58
 8000f9a:	bd70      	pop	{r4, r5, r6, pc}

08000f9c <__smakebuf_r>:
 8000f9c:	898b      	ldrh	r3, [r1, #12]
 8000f9e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000fa0:	079d      	lsls	r5, r3, #30
 8000fa2:	4606      	mov	r6, r0
 8000fa4:	460c      	mov	r4, r1
 8000fa6:	d507      	bpl.n	8000fb8 <__smakebuf_r+0x1c>
 8000fa8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000fac:	6023      	str	r3, [r4, #0]
 8000fae:	6123      	str	r3, [r4, #16]
 8000fb0:	2301      	movs	r3, #1
 8000fb2:	6163      	str	r3, [r4, #20]
 8000fb4:	b002      	add	sp, #8
 8000fb6:	bd70      	pop	{r4, r5, r6, pc}
 8000fb8:	ab01      	add	r3, sp, #4
 8000fba:	466a      	mov	r2, sp
 8000fbc:	f7ff ffca 	bl	8000f54 <__swhatbuf_r>
 8000fc0:	9900      	ldr	r1, [sp, #0]
 8000fc2:	4605      	mov	r5, r0
 8000fc4:	4630      	mov	r0, r6
 8000fc6:	f000 f879 	bl	80010bc <_malloc_r>
 8000fca:	b948      	cbnz	r0, 8000fe0 <__smakebuf_r+0x44>
 8000fcc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fd0:	059a      	lsls	r2, r3, #22
 8000fd2:	d4ef      	bmi.n	8000fb4 <__smakebuf_r+0x18>
 8000fd4:	f023 0303 	bic.w	r3, r3, #3
 8000fd8:	f043 0302 	orr.w	r3, r3, #2
 8000fdc:	81a3      	strh	r3, [r4, #12]
 8000fde:	e7e3      	b.n	8000fa8 <__smakebuf_r+0xc>
 8000fe0:	4b0d      	ldr	r3, [pc, #52]	; (8001018 <__smakebuf_r+0x7c>)
 8000fe2:	62b3      	str	r3, [r6, #40]	; 0x28
 8000fe4:	89a3      	ldrh	r3, [r4, #12]
 8000fe6:	6020      	str	r0, [r4, #0]
 8000fe8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000fec:	81a3      	strh	r3, [r4, #12]
 8000fee:	9b00      	ldr	r3, [sp, #0]
 8000ff0:	6163      	str	r3, [r4, #20]
 8000ff2:	9b01      	ldr	r3, [sp, #4]
 8000ff4:	6120      	str	r0, [r4, #16]
 8000ff6:	b15b      	cbz	r3, 8001010 <__smakebuf_r+0x74>
 8000ff8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ffc:	4630      	mov	r0, r6
 8000ffe:	f000 fc2d 	bl	800185c <_isatty_r>
 8001002:	b128      	cbz	r0, 8001010 <__smakebuf_r+0x74>
 8001004:	89a3      	ldrh	r3, [r4, #12]
 8001006:	f023 0303 	bic.w	r3, r3, #3
 800100a:	f043 0301 	orr.w	r3, r3, #1
 800100e:	81a3      	strh	r3, [r4, #12]
 8001010:	89a0      	ldrh	r0, [r4, #12]
 8001012:	4305      	orrs	r5, r0
 8001014:	81a5      	strh	r5, [r4, #12]
 8001016:	e7cd      	b.n	8000fb4 <__smakebuf_r+0x18>
 8001018:	08000dad 	.word	0x08000dad

0800101c <_free_r>:
 800101c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800101e:	2900      	cmp	r1, #0
 8001020:	d048      	beq.n	80010b4 <_free_r+0x98>
 8001022:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001026:	9001      	str	r0, [sp, #4]
 8001028:	2b00      	cmp	r3, #0
 800102a:	f1a1 0404 	sub.w	r4, r1, #4
 800102e:	bfb8      	it	lt
 8001030:	18e4      	addlt	r4, r4, r3
 8001032:	f000 fc35 	bl	80018a0 <__malloc_lock>
 8001036:	4a20      	ldr	r2, [pc, #128]	; (80010b8 <_free_r+0x9c>)
 8001038:	9801      	ldr	r0, [sp, #4]
 800103a:	6813      	ldr	r3, [r2, #0]
 800103c:	4615      	mov	r5, r2
 800103e:	b933      	cbnz	r3, 800104e <_free_r+0x32>
 8001040:	6063      	str	r3, [r4, #4]
 8001042:	6014      	str	r4, [r2, #0]
 8001044:	b003      	add	sp, #12
 8001046:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800104a:	f000 bc2f 	b.w	80018ac <__malloc_unlock>
 800104e:	42a3      	cmp	r3, r4
 8001050:	d90b      	bls.n	800106a <_free_r+0x4e>
 8001052:	6821      	ldr	r1, [r4, #0]
 8001054:	1862      	adds	r2, r4, r1
 8001056:	4293      	cmp	r3, r2
 8001058:	bf04      	itt	eq
 800105a:	681a      	ldreq	r2, [r3, #0]
 800105c:	685b      	ldreq	r3, [r3, #4]
 800105e:	6063      	str	r3, [r4, #4]
 8001060:	bf04      	itt	eq
 8001062:	1852      	addeq	r2, r2, r1
 8001064:	6022      	streq	r2, [r4, #0]
 8001066:	602c      	str	r4, [r5, #0]
 8001068:	e7ec      	b.n	8001044 <_free_r+0x28>
 800106a:	461a      	mov	r2, r3
 800106c:	685b      	ldr	r3, [r3, #4]
 800106e:	b10b      	cbz	r3, 8001074 <_free_r+0x58>
 8001070:	42a3      	cmp	r3, r4
 8001072:	d9fa      	bls.n	800106a <_free_r+0x4e>
 8001074:	6811      	ldr	r1, [r2, #0]
 8001076:	1855      	adds	r5, r2, r1
 8001078:	42a5      	cmp	r5, r4
 800107a:	d10b      	bne.n	8001094 <_free_r+0x78>
 800107c:	6824      	ldr	r4, [r4, #0]
 800107e:	4421      	add	r1, r4
 8001080:	1854      	adds	r4, r2, r1
 8001082:	42a3      	cmp	r3, r4
 8001084:	6011      	str	r1, [r2, #0]
 8001086:	d1dd      	bne.n	8001044 <_free_r+0x28>
 8001088:	681c      	ldr	r4, [r3, #0]
 800108a:	685b      	ldr	r3, [r3, #4]
 800108c:	6053      	str	r3, [r2, #4]
 800108e:	4421      	add	r1, r4
 8001090:	6011      	str	r1, [r2, #0]
 8001092:	e7d7      	b.n	8001044 <_free_r+0x28>
 8001094:	d902      	bls.n	800109c <_free_r+0x80>
 8001096:	230c      	movs	r3, #12
 8001098:	6003      	str	r3, [r0, #0]
 800109a:	e7d3      	b.n	8001044 <_free_r+0x28>
 800109c:	6825      	ldr	r5, [r4, #0]
 800109e:	1961      	adds	r1, r4, r5
 80010a0:	428b      	cmp	r3, r1
 80010a2:	bf04      	itt	eq
 80010a4:	6819      	ldreq	r1, [r3, #0]
 80010a6:	685b      	ldreq	r3, [r3, #4]
 80010a8:	6063      	str	r3, [r4, #4]
 80010aa:	bf04      	itt	eq
 80010ac:	1949      	addeq	r1, r1, r5
 80010ae:	6021      	streq	r1, [r4, #0]
 80010b0:	6054      	str	r4, [r2, #4]
 80010b2:	e7c7      	b.n	8001044 <_free_r+0x28>
 80010b4:	b003      	add	sp, #12
 80010b6:	bd30      	pop	{r4, r5, pc}
 80010b8:	2000008c 	.word	0x2000008c

080010bc <_malloc_r>:
 80010bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010be:	1ccd      	adds	r5, r1, #3
 80010c0:	f025 0503 	bic.w	r5, r5, #3
 80010c4:	3508      	adds	r5, #8
 80010c6:	2d0c      	cmp	r5, #12
 80010c8:	bf38      	it	cc
 80010ca:	250c      	movcc	r5, #12
 80010cc:	2d00      	cmp	r5, #0
 80010ce:	4606      	mov	r6, r0
 80010d0:	db01      	blt.n	80010d6 <_malloc_r+0x1a>
 80010d2:	42a9      	cmp	r1, r5
 80010d4:	d903      	bls.n	80010de <_malloc_r+0x22>
 80010d6:	230c      	movs	r3, #12
 80010d8:	6033      	str	r3, [r6, #0]
 80010da:	2000      	movs	r0, #0
 80010dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010de:	f000 fbdf 	bl	80018a0 <__malloc_lock>
 80010e2:	4921      	ldr	r1, [pc, #132]	; (8001168 <_malloc_r+0xac>)
 80010e4:	680a      	ldr	r2, [r1, #0]
 80010e6:	4614      	mov	r4, r2
 80010e8:	b99c      	cbnz	r4, 8001112 <_malloc_r+0x56>
 80010ea:	4f20      	ldr	r7, [pc, #128]	; (800116c <_malloc_r+0xb0>)
 80010ec:	683b      	ldr	r3, [r7, #0]
 80010ee:	b923      	cbnz	r3, 80010fa <_malloc_r+0x3e>
 80010f0:	4621      	mov	r1, r4
 80010f2:	4630      	mov	r0, r6
 80010f4:	f000 fb2a 	bl	800174c <_sbrk_r>
 80010f8:	6038      	str	r0, [r7, #0]
 80010fa:	4629      	mov	r1, r5
 80010fc:	4630      	mov	r0, r6
 80010fe:	f000 fb25 	bl	800174c <_sbrk_r>
 8001102:	1c43      	adds	r3, r0, #1
 8001104:	d123      	bne.n	800114e <_malloc_r+0x92>
 8001106:	230c      	movs	r3, #12
 8001108:	6033      	str	r3, [r6, #0]
 800110a:	4630      	mov	r0, r6
 800110c:	f000 fbce 	bl	80018ac <__malloc_unlock>
 8001110:	e7e3      	b.n	80010da <_malloc_r+0x1e>
 8001112:	6823      	ldr	r3, [r4, #0]
 8001114:	1b5b      	subs	r3, r3, r5
 8001116:	d417      	bmi.n	8001148 <_malloc_r+0x8c>
 8001118:	2b0b      	cmp	r3, #11
 800111a:	d903      	bls.n	8001124 <_malloc_r+0x68>
 800111c:	6023      	str	r3, [r4, #0]
 800111e:	441c      	add	r4, r3
 8001120:	6025      	str	r5, [r4, #0]
 8001122:	e004      	b.n	800112e <_malloc_r+0x72>
 8001124:	6863      	ldr	r3, [r4, #4]
 8001126:	42a2      	cmp	r2, r4
 8001128:	bf0c      	ite	eq
 800112a:	600b      	streq	r3, [r1, #0]
 800112c:	6053      	strne	r3, [r2, #4]
 800112e:	4630      	mov	r0, r6
 8001130:	f000 fbbc 	bl	80018ac <__malloc_unlock>
 8001134:	f104 000b 	add.w	r0, r4, #11
 8001138:	1d23      	adds	r3, r4, #4
 800113a:	f020 0007 	bic.w	r0, r0, #7
 800113e:	1ac2      	subs	r2, r0, r3
 8001140:	d0cc      	beq.n	80010dc <_malloc_r+0x20>
 8001142:	1a1b      	subs	r3, r3, r0
 8001144:	50a3      	str	r3, [r4, r2]
 8001146:	e7c9      	b.n	80010dc <_malloc_r+0x20>
 8001148:	4622      	mov	r2, r4
 800114a:	6864      	ldr	r4, [r4, #4]
 800114c:	e7cc      	b.n	80010e8 <_malloc_r+0x2c>
 800114e:	1cc4      	adds	r4, r0, #3
 8001150:	f024 0403 	bic.w	r4, r4, #3
 8001154:	42a0      	cmp	r0, r4
 8001156:	d0e3      	beq.n	8001120 <_malloc_r+0x64>
 8001158:	1a21      	subs	r1, r4, r0
 800115a:	4630      	mov	r0, r6
 800115c:	f000 faf6 	bl	800174c <_sbrk_r>
 8001160:	3001      	adds	r0, #1
 8001162:	d1dd      	bne.n	8001120 <_malloc_r+0x64>
 8001164:	e7cf      	b.n	8001106 <_malloc_r+0x4a>
 8001166:	bf00      	nop
 8001168:	2000008c 	.word	0x2000008c
 800116c:	20000090 	.word	0x20000090

08001170 <__sfputc_r>:
 8001170:	6893      	ldr	r3, [r2, #8]
 8001172:	3b01      	subs	r3, #1
 8001174:	2b00      	cmp	r3, #0
 8001176:	b410      	push	{r4}
 8001178:	6093      	str	r3, [r2, #8]
 800117a:	da08      	bge.n	800118e <__sfputc_r+0x1e>
 800117c:	6994      	ldr	r4, [r2, #24]
 800117e:	42a3      	cmp	r3, r4
 8001180:	db01      	blt.n	8001186 <__sfputc_r+0x16>
 8001182:	290a      	cmp	r1, #10
 8001184:	d103      	bne.n	800118e <__sfputc_r+0x1e>
 8001186:	f85d 4b04 	ldr.w	r4, [sp], #4
 800118a:	f7ff bc69 	b.w	8000a60 <__swbuf_r>
 800118e:	6813      	ldr	r3, [r2, #0]
 8001190:	1c58      	adds	r0, r3, #1
 8001192:	6010      	str	r0, [r2, #0]
 8001194:	7019      	strb	r1, [r3, #0]
 8001196:	4608      	mov	r0, r1
 8001198:	f85d 4b04 	ldr.w	r4, [sp], #4
 800119c:	4770      	bx	lr

0800119e <__sfputs_r>:
 800119e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011a0:	4606      	mov	r6, r0
 80011a2:	460f      	mov	r7, r1
 80011a4:	4614      	mov	r4, r2
 80011a6:	18d5      	adds	r5, r2, r3
 80011a8:	42ac      	cmp	r4, r5
 80011aa:	d101      	bne.n	80011b0 <__sfputs_r+0x12>
 80011ac:	2000      	movs	r0, #0
 80011ae:	e007      	b.n	80011c0 <__sfputs_r+0x22>
 80011b0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80011b4:	463a      	mov	r2, r7
 80011b6:	4630      	mov	r0, r6
 80011b8:	f7ff ffda 	bl	8001170 <__sfputc_r>
 80011bc:	1c43      	adds	r3, r0, #1
 80011be:	d1f3      	bne.n	80011a8 <__sfputs_r+0xa>
 80011c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080011c4 <_vfiprintf_r>:
 80011c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80011c8:	460d      	mov	r5, r1
 80011ca:	b09d      	sub	sp, #116	; 0x74
 80011cc:	4614      	mov	r4, r2
 80011ce:	4698      	mov	r8, r3
 80011d0:	4606      	mov	r6, r0
 80011d2:	b118      	cbz	r0, 80011dc <_vfiprintf_r+0x18>
 80011d4:	6983      	ldr	r3, [r0, #24]
 80011d6:	b90b      	cbnz	r3, 80011dc <_vfiprintf_r+0x18>
 80011d8:	f7ff fe1c 	bl	8000e14 <__sinit>
 80011dc:	4b89      	ldr	r3, [pc, #548]	; (8001404 <_vfiprintf_r+0x240>)
 80011de:	429d      	cmp	r5, r3
 80011e0:	d11b      	bne.n	800121a <_vfiprintf_r+0x56>
 80011e2:	6875      	ldr	r5, [r6, #4]
 80011e4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80011e6:	07d9      	lsls	r1, r3, #31
 80011e8:	d405      	bmi.n	80011f6 <_vfiprintf_r+0x32>
 80011ea:	89ab      	ldrh	r3, [r5, #12]
 80011ec:	059a      	lsls	r2, r3, #22
 80011ee:	d402      	bmi.n	80011f6 <_vfiprintf_r+0x32>
 80011f0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80011f2:	f7ff fead 	bl	8000f50 <__retarget_lock_acquire_recursive>
 80011f6:	89ab      	ldrh	r3, [r5, #12]
 80011f8:	071b      	lsls	r3, r3, #28
 80011fa:	d501      	bpl.n	8001200 <_vfiprintf_r+0x3c>
 80011fc:	692b      	ldr	r3, [r5, #16]
 80011fe:	b9eb      	cbnz	r3, 800123c <_vfiprintf_r+0x78>
 8001200:	4629      	mov	r1, r5
 8001202:	4630      	mov	r0, r6
 8001204:	f7ff fc7e 	bl	8000b04 <__swsetup_r>
 8001208:	b1c0      	cbz	r0, 800123c <_vfiprintf_r+0x78>
 800120a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800120c:	07dc      	lsls	r4, r3, #31
 800120e:	d50e      	bpl.n	800122e <_vfiprintf_r+0x6a>
 8001210:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001214:	b01d      	add	sp, #116	; 0x74
 8001216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800121a:	4b7b      	ldr	r3, [pc, #492]	; (8001408 <_vfiprintf_r+0x244>)
 800121c:	429d      	cmp	r5, r3
 800121e:	d101      	bne.n	8001224 <_vfiprintf_r+0x60>
 8001220:	68b5      	ldr	r5, [r6, #8]
 8001222:	e7df      	b.n	80011e4 <_vfiprintf_r+0x20>
 8001224:	4b79      	ldr	r3, [pc, #484]	; (800140c <_vfiprintf_r+0x248>)
 8001226:	429d      	cmp	r5, r3
 8001228:	bf08      	it	eq
 800122a:	68f5      	ldreq	r5, [r6, #12]
 800122c:	e7da      	b.n	80011e4 <_vfiprintf_r+0x20>
 800122e:	89ab      	ldrh	r3, [r5, #12]
 8001230:	0598      	lsls	r0, r3, #22
 8001232:	d4ed      	bmi.n	8001210 <_vfiprintf_r+0x4c>
 8001234:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001236:	f7ff fe8c 	bl	8000f52 <__retarget_lock_release_recursive>
 800123a:	e7e9      	b.n	8001210 <_vfiprintf_r+0x4c>
 800123c:	2300      	movs	r3, #0
 800123e:	9309      	str	r3, [sp, #36]	; 0x24
 8001240:	2320      	movs	r3, #32
 8001242:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8001246:	f8cd 800c 	str.w	r8, [sp, #12]
 800124a:	2330      	movs	r3, #48	; 0x30
 800124c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001410 <_vfiprintf_r+0x24c>
 8001250:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001254:	f04f 0901 	mov.w	r9, #1
 8001258:	4623      	mov	r3, r4
 800125a:	469a      	mov	sl, r3
 800125c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001260:	b10a      	cbz	r2, 8001266 <_vfiprintf_r+0xa2>
 8001262:	2a25      	cmp	r2, #37	; 0x25
 8001264:	d1f9      	bne.n	800125a <_vfiprintf_r+0x96>
 8001266:	ebba 0b04 	subs.w	fp, sl, r4
 800126a:	d00b      	beq.n	8001284 <_vfiprintf_r+0xc0>
 800126c:	465b      	mov	r3, fp
 800126e:	4622      	mov	r2, r4
 8001270:	4629      	mov	r1, r5
 8001272:	4630      	mov	r0, r6
 8001274:	f7ff ff93 	bl	800119e <__sfputs_r>
 8001278:	3001      	adds	r0, #1
 800127a:	f000 80aa 	beq.w	80013d2 <_vfiprintf_r+0x20e>
 800127e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8001280:	445a      	add	r2, fp
 8001282:	9209      	str	r2, [sp, #36]	; 0x24
 8001284:	f89a 3000 	ldrb.w	r3, [sl]
 8001288:	2b00      	cmp	r3, #0
 800128a:	f000 80a2 	beq.w	80013d2 <_vfiprintf_r+0x20e>
 800128e:	2300      	movs	r3, #0
 8001290:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001294:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001298:	f10a 0a01 	add.w	sl, sl, #1
 800129c:	9304      	str	r3, [sp, #16]
 800129e:	9307      	str	r3, [sp, #28]
 80012a0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80012a4:	931a      	str	r3, [sp, #104]	; 0x68
 80012a6:	4654      	mov	r4, sl
 80012a8:	2205      	movs	r2, #5
 80012aa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80012ae:	4858      	ldr	r0, [pc, #352]	; (8001410 <_vfiprintf_r+0x24c>)
 80012b0:	f7fe ff96 	bl	80001e0 <memchr>
 80012b4:	9a04      	ldr	r2, [sp, #16]
 80012b6:	b9d8      	cbnz	r0, 80012f0 <_vfiprintf_r+0x12c>
 80012b8:	06d1      	lsls	r1, r2, #27
 80012ba:	bf44      	itt	mi
 80012bc:	2320      	movmi	r3, #32
 80012be:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80012c2:	0713      	lsls	r3, r2, #28
 80012c4:	bf44      	itt	mi
 80012c6:	232b      	movmi	r3, #43	; 0x2b
 80012c8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80012cc:	f89a 3000 	ldrb.w	r3, [sl]
 80012d0:	2b2a      	cmp	r3, #42	; 0x2a
 80012d2:	d015      	beq.n	8001300 <_vfiprintf_r+0x13c>
 80012d4:	9a07      	ldr	r2, [sp, #28]
 80012d6:	4654      	mov	r4, sl
 80012d8:	2000      	movs	r0, #0
 80012da:	f04f 0c0a 	mov.w	ip, #10
 80012de:	4621      	mov	r1, r4
 80012e0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80012e4:	3b30      	subs	r3, #48	; 0x30
 80012e6:	2b09      	cmp	r3, #9
 80012e8:	d94e      	bls.n	8001388 <_vfiprintf_r+0x1c4>
 80012ea:	b1b0      	cbz	r0, 800131a <_vfiprintf_r+0x156>
 80012ec:	9207      	str	r2, [sp, #28]
 80012ee:	e014      	b.n	800131a <_vfiprintf_r+0x156>
 80012f0:	eba0 0308 	sub.w	r3, r0, r8
 80012f4:	fa09 f303 	lsl.w	r3, r9, r3
 80012f8:	4313      	orrs	r3, r2
 80012fa:	9304      	str	r3, [sp, #16]
 80012fc:	46a2      	mov	sl, r4
 80012fe:	e7d2      	b.n	80012a6 <_vfiprintf_r+0xe2>
 8001300:	9b03      	ldr	r3, [sp, #12]
 8001302:	1d19      	adds	r1, r3, #4
 8001304:	681b      	ldr	r3, [r3, #0]
 8001306:	9103      	str	r1, [sp, #12]
 8001308:	2b00      	cmp	r3, #0
 800130a:	bfbb      	ittet	lt
 800130c:	425b      	neglt	r3, r3
 800130e:	f042 0202 	orrlt.w	r2, r2, #2
 8001312:	9307      	strge	r3, [sp, #28]
 8001314:	9307      	strlt	r3, [sp, #28]
 8001316:	bfb8      	it	lt
 8001318:	9204      	strlt	r2, [sp, #16]
 800131a:	7823      	ldrb	r3, [r4, #0]
 800131c:	2b2e      	cmp	r3, #46	; 0x2e
 800131e:	d10c      	bne.n	800133a <_vfiprintf_r+0x176>
 8001320:	7863      	ldrb	r3, [r4, #1]
 8001322:	2b2a      	cmp	r3, #42	; 0x2a
 8001324:	d135      	bne.n	8001392 <_vfiprintf_r+0x1ce>
 8001326:	9b03      	ldr	r3, [sp, #12]
 8001328:	1d1a      	adds	r2, r3, #4
 800132a:	681b      	ldr	r3, [r3, #0]
 800132c:	9203      	str	r2, [sp, #12]
 800132e:	2b00      	cmp	r3, #0
 8001330:	bfb8      	it	lt
 8001332:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8001336:	3402      	adds	r4, #2
 8001338:	9305      	str	r3, [sp, #20]
 800133a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001420 <_vfiprintf_r+0x25c>
 800133e:	7821      	ldrb	r1, [r4, #0]
 8001340:	2203      	movs	r2, #3
 8001342:	4650      	mov	r0, sl
 8001344:	f7fe ff4c 	bl	80001e0 <memchr>
 8001348:	b140      	cbz	r0, 800135c <_vfiprintf_r+0x198>
 800134a:	2340      	movs	r3, #64	; 0x40
 800134c:	eba0 000a 	sub.w	r0, r0, sl
 8001350:	fa03 f000 	lsl.w	r0, r3, r0
 8001354:	9b04      	ldr	r3, [sp, #16]
 8001356:	4303      	orrs	r3, r0
 8001358:	3401      	adds	r4, #1
 800135a:	9304      	str	r3, [sp, #16]
 800135c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001360:	482c      	ldr	r0, [pc, #176]	; (8001414 <_vfiprintf_r+0x250>)
 8001362:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8001366:	2206      	movs	r2, #6
 8001368:	f7fe ff3a 	bl	80001e0 <memchr>
 800136c:	2800      	cmp	r0, #0
 800136e:	d03f      	beq.n	80013f0 <_vfiprintf_r+0x22c>
 8001370:	4b29      	ldr	r3, [pc, #164]	; (8001418 <_vfiprintf_r+0x254>)
 8001372:	bb1b      	cbnz	r3, 80013bc <_vfiprintf_r+0x1f8>
 8001374:	9b03      	ldr	r3, [sp, #12]
 8001376:	3307      	adds	r3, #7
 8001378:	f023 0307 	bic.w	r3, r3, #7
 800137c:	3308      	adds	r3, #8
 800137e:	9303      	str	r3, [sp, #12]
 8001380:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001382:	443b      	add	r3, r7
 8001384:	9309      	str	r3, [sp, #36]	; 0x24
 8001386:	e767      	b.n	8001258 <_vfiprintf_r+0x94>
 8001388:	fb0c 3202 	mla	r2, ip, r2, r3
 800138c:	460c      	mov	r4, r1
 800138e:	2001      	movs	r0, #1
 8001390:	e7a5      	b.n	80012de <_vfiprintf_r+0x11a>
 8001392:	2300      	movs	r3, #0
 8001394:	3401      	adds	r4, #1
 8001396:	9305      	str	r3, [sp, #20]
 8001398:	4619      	mov	r1, r3
 800139a:	f04f 0c0a 	mov.w	ip, #10
 800139e:	4620      	mov	r0, r4
 80013a0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80013a4:	3a30      	subs	r2, #48	; 0x30
 80013a6:	2a09      	cmp	r2, #9
 80013a8:	d903      	bls.n	80013b2 <_vfiprintf_r+0x1ee>
 80013aa:	2b00      	cmp	r3, #0
 80013ac:	d0c5      	beq.n	800133a <_vfiprintf_r+0x176>
 80013ae:	9105      	str	r1, [sp, #20]
 80013b0:	e7c3      	b.n	800133a <_vfiprintf_r+0x176>
 80013b2:	fb0c 2101 	mla	r1, ip, r1, r2
 80013b6:	4604      	mov	r4, r0
 80013b8:	2301      	movs	r3, #1
 80013ba:	e7f0      	b.n	800139e <_vfiprintf_r+0x1da>
 80013bc:	ab03      	add	r3, sp, #12
 80013be:	9300      	str	r3, [sp, #0]
 80013c0:	462a      	mov	r2, r5
 80013c2:	4b16      	ldr	r3, [pc, #88]	; (800141c <_vfiprintf_r+0x258>)
 80013c4:	a904      	add	r1, sp, #16
 80013c6:	4630      	mov	r0, r6
 80013c8:	f3af 8000 	nop.w
 80013cc:	4607      	mov	r7, r0
 80013ce:	1c78      	adds	r0, r7, #1
 80013d0:	d1d6      	bne.n	8001380 <_vfiprintf_r+0x1bc>
 80013d2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80013d4:	07d9      	lsls	r1, r3, #31
 80013d6:	d405      	bmi.n	80013e4 <_vfiprintf_r+0x220>
 80013d8:	89ab      	ldrh	r3, [r5, #12]
 80013da:	059a      	lsls	r2, r3, #22
 80013dc:	d402      	bmi.n	80013e4 <_vfiprintf_r+0x220>
 80013de:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80013e0:	f7ff fdb7 	bl	8000f52 <__retarget_lock_release_recursive>
 80013e4:	89ab      	ldrh	r3, [r5, #12]
 80013e6:	065b      	lsls	r3, r3, #25
 80013e8:	f53f af12 	bmi.w	8001210 <_vfiprintf_r+0x4c>
 80013ec:	9809      	ldr	r0, [sp, #36]	; 0x24
 80013ee:	e711      	b.n	8001214 <_vfiprintf_r+0x50>
 80013f0:	ab03      	add	r3, sp, #12
 80013f2:	9300      	str	r3, [sp, #0]
 80013f4:	462a      	mov	r2, r5
 80013f6:	4b09      	ldr	r3, [pc, #36]	; (800141c <_vfiprintf_r+0x258>)
 80013f8:	a904      	add	r1, sp, #16
 80013fa:	4630      	mov	r0, r6
 80013fc:	f000 f880 	bl	8001500 <_printf_i>
 8001400:	e7e4      	b.n	80013cc <_vfiprintf_r+0x208>
 8001402:	bf00      	nop
 8001404:	08001e80 	.word	0x08001e80
 8001408:	08001ea0 	.word	0x08001ea0
 800140c:	08001e60 	.word	0x08001e60
 8001410:	08001ec0 	.word	0x08001ec0
 8001414:	08001eca 	.word	0x08001eca
 8001418:	00000000 	.word	0x00000000
 800141c:	0800119f 	.word	0x0800119f
 8001420:	08001ec6 	.word	0x08001ec6

08001424 <_printf_common>:
 8001424:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001428:	4616      	mov	r6, r2
 800142a:	4699      	mov	r9, r3
 800142c:	688a      	ldr	r2, [r1, #8]
 800142e:	690b      	ldr	r3, [r1, #16]
 8001430:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001434:	4293      	cmp	r3, r2
 8001436:	bfb8      	it	lt
 8001438:	4613      	movlt	r3, r2
 800143a:	6033      	str	r3, [r6, #0]
 800143c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001440:	4607      	mov	r7, r0
 8001442:	460c      	mov	r4, r1
 8001444:	b10a      	cbz	r2, 800144a <_printf_common+0x26>
 8001446:	3301      	adds	r3, #1
 8001448:	6033      	str	r3, [r6, #0]
 800144a:	6823      	ldr	r3, [r4, #0]
 800144c:	0699      	lsls	r1, r3, #26
 800144e:	bf42      	ittt	mi
 8001450:	6833      	ldrmi	r3, [r6, #0]
 8001452:	3302      	addmi	r3, #2
 8001454:	6033      	strmi	r3, [r6, #0]
 8001456:	6825      	ldr	r5, [r4, #0]
 8001458:	f015 0506 	ands.w	r5, r5, #6
 800145c:	d106      	bne.n	800146c <_printf_common+0x48>
 800145e:	f104 0a19 	add.w	sl, r4, #25
 8001462:	68e3      	ldr	r3, [r4, #12]
 8001464:	6832      	ldr	r2, [r6, #0]
 8001466:	1a9b      	subs	r3, r3, r2
 8001468:	42ab      	cmp	r3, r5
 800146a:	dc26      	bgt.n	80014ba <_printf_common+0x96>
 800146c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001470:	1e13      	subs	r3, r2, #0
 8001472:	6822      	ldr	r2, [r4, #0]
 8001474:	bf18      	it	ne
 8001476:	2301      	movne	r3, #1
 8001478:	0692      	lsls	r2, r2, #26
 800147a:	d42b      	bmi.n	80014d4 <_printf_common+0xb0>
 800147c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001480:	4649      	mov	r1, r9
 8001482:	4638      	mov	r0, r7
 8001484:	47c0      	blx	r8
 8001486:	3001      	adds	r0, #1
 8001488:	d01e      	beq.n	80014c8 <_printf_common+0xa4>
 800148a:	6823      	ldr	r3, [r4, #0]
 800148c:	68e5      	ldr	r5, [r4, #12]
 800148e:	6832      	ldr	r2, [r6, #0]
 8001490:	f003 0306 	and.w	r3, r3, #6
 8001494:	2b04      	cmp	r3, #4
 8001496:	bf08      	it	eq
 8001498:	1aad      	subeq	r5, r5, r2
 800149a:	68a3      	ldr	r3, [r4, #8]
 800149c:	6922      	ldr	r2, [r4, #16]
 800149e:	bf0c      	ite	eq
 80014a0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80014a4:	2500      	movne	r5, #0
 80014a6:	4293      	cmp	r3, r2
 80014a8:	bfc4      	itt	gt
 80014aa:	1a9b      	subgt	r3, r3, r2
 80014ac:	18ed      	addgt	r5, r5, r3
 80014ae:	2600      	movs	r6, #0
 80014b0:	341a      	adds	r4, #26
 80014b2:	42b5      	cmp	r5, r6
 80014b4:	d11a      	bne.n	80014ec <_printf_common+0xc8>
 80014b6:	2000      	movs	r0, #0
 80014b8:	e008      	b.n	80014cc <_printf_common+0xa8>
 80014ba:	2301      	movs	r3, #1
 80014bc:	4652      	mov	r2, sl
 80014be:	4649      	mov	r1, r9
 80014c0:	4638      	mov	r0, r7
 80014c2:	47c0      	blx	r8
 80014c4:	3001      	adds	r0, #1
 80014c6:	d103      	bne.n	80014d0 <_printf_common+0xac>
 80014c8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80014cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80014d0:	3501      	adds	r5, #1
 80014d2:	e7c6      	b.n	8001462 <_printf_common+0x3e>
 80014d4:	18e1      	adds	r1, r4, r3
 80014d6:	1c5a      	adds	r2, r3, #1
 80014d8:	2030      	movs	r0, #48	; 0x30
 80014da:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80014de:	4422      	add	r2, r4
 80014e0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80014e4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80014e8:	3302      	adds	r3, #2
 80014ea:	e7c7      	b.n	800147c <_printf_common+0x58>
 80014ec:	2301      	movs	r3, #1
 80014ee:	4622      	mov	r2, r4
 80014f0:	4649      	mov	r1, r9
 80014f2:	4638      	mov	r0, r7
 80014f4:	47c0      	blx	r8
 80014f6:	3001      	adds	r0, #1
 80014f8:	d0e6      	beq.n	80014c8 <_printf_common+0xa4>
 80014fa:	3601      	adds	r6, #1
 80014fc:	e7d9      	b.n	80014b2 <_printf_common+0x8e>
	...

08001500 <_printf_i>:
 8001500:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001504:	460c      	mov	r4, r1
 8001506:	4691      	mov	r9, r2
 8001508:	7e27      	ldrb	r7, [r4, #24]
 800150a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800150c:	2f78      	cmp	r7, #120	; 0x78
 800150e:	4680      	mov	r8, r0
 8001510:	469a      	mov	sl, r3
 8001512:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001516:	d807      	bhi.n	8001528 <_printf_i+0x28>
 8001518:	2f62      	cmp	r7, #98	; 0x62
 800151a:	d80a      	bhi.n	8001532 <_printf_i+0x32>
 800151c:	2f00      	cmp	r7, #0
 800151e:	f000 80d8 	beq.w	80016d2 <_printf_i+0x1d2>
 8001522:	2f58      	cmp	r7, #88	; 0x58
 8001524:	f000 80a3 	beq.w	800166e <_printf_i+0x16e>
 8001528:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800152c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001530:	e03a      	b.n	80015a8 <_printf_i+0xa8>
 8001532:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001536:	2b15      	cmp	r3, #21
 8001538:	d8f6      	bhi.n	8001528 <_printf_i+0x28>
 800153a:	a001      	add	r0, pc, #4	; (adr r0, 8001540 <_printf_i+0x40>)
 800153c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8001540:	08001599 	.word	0x08001599
 8001544:	080015ad 	.word	0x080015ad
 8001548:	08001529 	.word	0x08001529
 800154c:	08001529 	.word	0x08001529
 8001550:	08001529 	.word	0x08001529
 8001554:	08001529 	.word	0x08001529
 8001558:	080015ad 	.word	0x080015ad
 800155c:	08001529 	.word	0x08001529
 8001560:	08001529 	.word	0x08001529
 8001564:	08001529 	.word	0x08001529
 8001568:	08001529 	.word	0x08001529
 800156c:	080016b9 	.word	0x080016b9
 8001570:	080015dd 	.word	0x080015dd
 8001574:	0800169b 	.word	0x0800169b
 8001578:	08001529 	.word	0x08001529
 800157c:	08001529 	.word	0x08001529
 8001580:	080016db 	.word	0x080016db
 8001584:	08001529 	.word	0x08001529
 8001588:	080015dd 	.word	0x080015dd
 800158c:	08001529 	.word	0x08001529
 8001590:	08001529 	.word	0x08001529
 8001594:	080016a3 	.word	0x080016a3
 8001598:	680b      	ldr	r3, [r1, #0]
 800159a:	1d1a      	adds	r2, r3, #4
 800159c:	681b      	ldr	r3, [r3, #0]
 800159e:	600a      	str	r2, [r1, #0]
 80015a0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80015a4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80015a8:	2301      	movs	r3, #1
 80015aa:	e0a3      	b.n	80016f4 <_printf_i+0x1f4>
 80015ac:	6825      	ldr	r5, [r4, #0]
 80015ae:	6808      	ldr	r0, [r1, #0]
 80015b0:	062e      	lsls	r6, r5, #24
 80015b2:	f100 0304 	add.w	r3, r0, #4
 80015b6:	d50a      	bpl.n	80015ce <_printf_i+0xce>
 80015b8:	6805      	ldr	r5, [r0, #0]
 80015ba:	600b      	str	r3, [r1, #0]
 80015bc:	2d00      	cmp	r5, #0
 80015be:	da03      	bge.n	80015c8 <_printf_i+0xc8>
 80015c0:	232d      	movs	r3, #45	; 0x2d
 80015c2:	426d      	negs	r5, r5
 80015c4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80015c8:	485e      	ldr	r0, [pc, #376]	; (8001744 <_printf_i+0x244>)
 80015ca:	230a      	movs	r3, #10
 80015cc:	e019      	b.n	8001602 <_printf_i+0x102>
 80015ce:	f015 0f40 	tst.w	r5, #64	; 0x40
 80015d2:	6805      	ldr	r5, [r0, #0]
 80015d4:	600b      	str	r3, [r1, #0]
 80015d6:	bf18      	it	ne
 80015d8:	b22d      	sxthne	r5, r5
 80015da:	e7ef      	b.n	80015bc <_printf_i+0xbc>
 80015dc:	680b      	ldr	r3, [r1, #0]
 80015de:	6825      	ldr	r5, [r4, #0]
 80015e0:	1d18      	adds	r0, r3, #4
 80015e2:	6008      	str	r0, [r1, #0]
 80015e4:	0628      	lsls	r0, r5, #24
 80015e6:	d501      	bpl.n	80015ec <_printf_i+0xec>
 80015e8:	681d      	ldr	r5, [r3, #0]
 80015ea:	e002      	b.n	80015f2 <_printf_i+0xf2>
 80015ec:	0669      	lsls	r1, r5, #25
 80015ee:	d5fb      	bpl.n	80015e8 <_printf_i+0xe8>
 80015f0:	881d      	ldrh	r5, [r3, #0]
 80015f2:	4854      	ldr	r0, [pc, #336]	; (8001744 <_printf_i+0x244>)
 80015f4:	2f6f      	cmp	r7, #111	; 0x6f
 80015f6:	bf0c      	ite	eq
 80015f8:	2308      	moveq	r3, #8
 80015fa:	230a      	movne	r3, #10
 80015fc:	2100      	movs	r1, #0
 80015fe:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001602:	6866      	ldr	r6, [r4, #4]
 8001604:	60a6      	str	r6, [r4, #8]
 8001606:	2e00      	cmp	r6, #0
 8001608:	bfa2      	ittt	ge
 800160a:	6821      	ldrge	r1, [r4, #0]
 800160c:	f021 0104 	bicge.w	r1, r1, #4
 8001610:	6021      	strge	r1, [r4, #0]
 8001612:	b90d      	cbnz	r5, 8001618 <_printf_i+0x118>
 8001614:	2e00      	cmp	r6, #0
 8001616:	d04d      	beq.n	80016b4 <_printf_i+0x1b4>
 8001618:	4616      	mov	r6, r2
 800161a:	fbb5 f1f3 	udiv	r1, r5, r3
 800161e:	fb03 5711 	mls	r7, r3, r1, r5
 8001622:	5dc7      	ldrb	r7, [r0, r7]
 8001624:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001628:	462f      	mov	r7, r5
 800162a:	42bb      	cmp	r3, r7
 800162c:	460d      	mov	r5, r1
 800162e:	d9f4      	bls.n	800161a <_printf_i+0x11a>
 8001630:	2b08      	cmp	r3, #8
 8001632:	d10b      	bne.n	800164c <_printf_i+0x14c>
 8001634:	6823      	ldr	r3, [r4, #0]
 8001636:	07df      	lsls	r7, r3, #31
 8001638:	d508      	bpl.n	800164c <_printf_i+0x14c>
 800163a:	6923      	ldr	r3, [r4, #16]
 800163c:	6861      	ldr	r1, [r4, #4]
 800163e:	4299      	cmp	r1, r3
 8001640:	bfde      	ittt	le
 8001642:	2330      	movle	r3, #48	; 0x30
 8001644:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001648:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 800164c:	1b92      	subs	r2, r2, r6
 800164e:	6122      	str	r2, [r4, #16]
 8001650:	f8cd a000 	str.w	sl, [sp]
 8001654:	464b      	mov	r3, r9
 8001656:	aa03      	add	r2, sp, #12
 8001658:	4621      	mov	r1, r4
 800165a:	4640      	mov	r0, r8
 800165c:	f7ff fee2 	bl	8001424 <_printf_common>
 8001660:	3001      	adds	r0, #1
 8001662:	d14c      	bne.n	80016fe <_printf_i+0x1fe>
 8001664:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001668:	b004      	add	sp, #16
 800166a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800166e:	4835      	ldr	r0, [pc, #212]	; (8001744 <_printf_i+0x244>)
 8001670:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001674:	6823      	ldr	r3, [r4, #0]
 8001676:	680e      	ldr	r6, [r1, #0]
 8001678:	061f      	lsls	r7, r3, #24
 800167a:	f856 5b04 	ldr.w	r5, [r6], #4
 800167e:	600e      	str	r6, [r1, #0]
 8001680:	d514      	bpl.n	80016ac <_printf_i+0x1ac>
 8001682:	07d9      	lsls	r1, r3, #31
 8001684:	bf44      	itt	mi
 8001686:	f043 0320 	orrmi.w	r3, r3, #32
 800168a:	6023      	strmi	r3, [r4, #0]
 800168c:	b91d      	cbnz	r5, 8001696 <_printf_i+0x196>
 800168e:	6823      	ldr	r3, [r4, #0]
 8001690:	f023 0320 	bic.w	r3, r3, #32
 8001694:	6023      	str	r3, [r4, #0]
 8001696:	2310      	movs	r3, #16
 8001698:	e7b0      	b.n	80015fc <_printf_i+0xfc>
 800169a:	6823      	ldr	r3, [r4, #0]
 800169c:	f043 0320 	orr.w	r3, r3, #32
 80016a0:	6023      	str	r3, [r4, #0]
 80016a2:	2378      	movs	r3, #120	; 0x78
 80016a4:	4828      	ldr	r0, [pc, #160]	; (8001748 <_printf_i+0x248>)
 80016a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80016aa:	e7e3      	b.n	8001674 <_printf_i+0x174>
 80016ac:	065e      	lsls	r6, r3, #25
 80016ae:	bf48      	it	mi
 80016b0:	b2ad      	uxthmi	r5, r5
 80016b2:	e7e6      	b.n	8001682 <_printf_i+0x182>
 80016b4:	4616      	mov	r6, r2
 80016b6:	e7bb      	b.n	8001630 <_printf_i+0x130>
 80016b8:	680b      	ldr	r3, [r1, #0]
 80016ba:	6826      	ldr	r6, [r4, #0]
 80016bc:	6960      	ldr	r0, [r4, #20]
 80016be:	1d1d      	adds	r5, r3, #4
 80016c0:	600d      	str	r5, [r1, #0]
 80016c2:	0635      	lsls	r5, r6, #24
 80016c4:	681b      	ldr	r3, [r3, #0]
 80016c6:	d501      	bpl.n	80016cc <_printf_i+0x1cc>
 80016c8:	6018      	str	r0, [r3, #0]
 80016ca:	e002      	b.n	80016d2 <_printf_i+0x1d2>
 80016cc:	0671      	lsls	r1, r6, #25
 80016ce:	d5fb      	bpl.n	80016c8 <_printf_i+0x1c8>
 80016d0:	8018      	strh	r0, [r3, #0]
 80016d2:	2300      	movs	r3, #0
 80016d4:	6123      	str	r3, [r4, #16]
 80016d6:	4616      	mov	r6, r2
 80016d8:	e7ba      	b.n	8001650 <_printf_i+0x150>
 80016da:	680b      	ldr	r3, [r1, #0]
 80016dc:	1d1a      	adds	r2, r3, #4
 80016de:	600a      	str	r2, [r1, #0]
 80016e0:	681e      	ldr	r6, [r3, #0]
 80016e2:	6862      	ldr	r2, [r4, #4]
 80016e4:	2100      	movs	r1, #0
 80016e6:	4630      	mov	r0, r6
 80016e8:	f7fe fd7a 	bl	80001e0 <memchr>
 80016ec:	b108      	cbz	r0, 80016f2 <_printf_i+0x1f2>
 80016ee:	1b80      	subs	r0, r0, r6
 80016f0:	6060      	str	r0, [r4, #4]
 80016f2:	6863      	ldr	r3, [r4, #4]
 80016f4:	6123      	str	r3, [r4, #16]
 80016f6:	2300      	movs	r3, #0
 80016f8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80016fc:	e7a8      	b.n	8001650 <_printf_i+0x150>
 80016fe:	6923      	ldr	r3, [r4, #16]
 8001700:	4632      	mov	r2, r6
 8001702:	4649      	mov	r1, r9
 8001704:	4640      	mov	r0, r8
 8001706:	47d0      	blx	sl
 8001708:	3001      	adds	r0, #1
 800170a:	d0ab      	beq.n	8001664 <_printf_i+0x164>
 800170c:	6823      	ldr	r3, [r4, #0]
 800170e:	079b      	lsls	r3, r3, #30
 8001710:	d413      	bmi.n	800173a <_printf_i+0x23a>
 8001712:	68e0      	ldr	r0, [r4, #12]
 8001714:	9b03      	ldr	r3, [sp, #12]
 8001716:	4298      	cmp	r0, r3
 8001718:	bfb8      	it	lt
 800171a:	4618      	movlt	r0, r3
 800171c:	e7a4      	b.n	8001668 <_printf_i+0x168>
 800171e:	2301      	movs	r3, #1
 8001720:	4632      	mov	r2, r6
 8001722:	4649      	mov	r1, r9
 8001724:	4640      	mov	r0, r8
 8001726:	47d0      	blx	sl
 8001728:	3001      	adds	r0, #1
 800172a:	d09b      	beq.n	8001664 <_printf_i+0x164>
 800172c:	3501      	adds	r5, #1
 800172e:	68e3      	ldr	r3, [r4, #12]
 8001730:	9903      	ldr	r1, [sp, #12]
 8001732:	1a5b      	subs	r3, r3, r1
 8001734:	42ab      	cmp	r3, r5
 8001736:	dcf2      	bgt.n	800171e <_printf_i+0x21e>
 8001738:	e7eb      	b.n	8001712 <_printf_i+0x212>
 800173a:	2500      	movs	r5, #0
 800173c:	f104 0619 	add.w	r6, r4, #25
 8001740:	e7f5      	b.n	800172e <_printf_i+0x22e>
 8001742:	bf00      	nop
 8001744:	08001ed1 	.word	0x08001ed1
 8001748:	08001ee2 	.word	0x08001ee2

0800174c <_sbrk_r>:
 800174c:	b538      	push	{r3, r4, r5, lr}
 800174e:	4d06      	ldr	r5, [pc, #24]	; (8001768 <_sbrk_r+0x1c>)
 8001750:	2300      	movs	r3, #0
 8001752:	4604      	mov	r4, r0
 8001754:	4608      	mov	r0, r1
 8001756:	602b      	str	r3, [r5, #0]
 8001758:	f7ff f850 	bl	80007fc <_sbrk>
 800175c:	1c43      	adds	r3, r0, #1
 800175e:	d102      	bne.n	8001766 <_sbrk_r+0x1a>
 8001760:	682b      	ldr	r3, [r5, #0]
 8001762:	b103      	cbz	r3, 8001766 <_sbrk_r+0x1a>
 8001764:	6023      	str	r3, [r4, #0]
 8001766:	bd38      	pop	{r3, r4, r5, pc}
 8001768:	2000015c 	.word	0x2000015c

0800176c <__sread>:
 800176c:	b510      	push	{r4, lr}
 800176e:	460c      	mov	r4, r1
 8001770:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001774:	f000 f8a0 	bl	80018b8 <_read_r>
 8001778:	2800      	cmp	r0, #0
 800177a:	bfab      	itete	ge
 800177c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800177e:	89a3      	ldrhlt	r3, [r4, #12]
 8001780:	181b      	addge	r3, r3, r0
 8001782:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001786:	bfac      	ite	ge
 8001788:	6563      	strge	r3, [r4, #84]	; 0x54
 800178a:	81a3      	strhlt	r3, [r4, #12]
 800178c:	bd10      	pop	{r4, pc}

0800178e <__swrite>:
 800178e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001792:	461f      	mov	r7, r3
 8001794:	898b      	ldrh	r3, [r1, #12]
 8001796:	05db      	lsls	r3, r3, #23
 8001798:	4605      	mov	r5, r0
 800179a:	460c      	mov	r4, r1
 800179c:	4616      	mov	r6, r2
 800179e:	d505      	bpl.n	80017ac <__swrite+0x1e>
 80017a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80017a4:	2302      	movs	r3, #2
 80017a6:	2200      	movs	r2, #0
 80017a8:	f000 f868 	bl	800187c <_lseek_r>
 80017ac:	89a3      	ldrh	r3, [r4, #12]
 80017ae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80017b2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80017b6:	81a3      	strh	r3, [r4, #12]
 80017b8:	4632      	mov	r2, r6
 80017ba:	463b      	mov	r3, r7
 80017bc:	4628      	mov	r0, r5
 80017be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80017c2:	f000 b817 	b.w	80017f4 <_write_r>

080017c6 <__sseek>:
 80017c6:	b510      	push	{r4, lr}
 80017c8:	460c      	mov	r4, r1
 80017ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80017ce:	f000 f855 	bl	800187c <_lseek_r>
 80017d2:	1c43      	adds	r3, r0, #1
 80017d4:	89a3      	ldrh	r3, [r4, #12]
 80017d6:	bf15      	itete	ne
 80017d8:	6560      	strne	r0, [r4, #84]	; 0x54
 80017da:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80017de:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80017e2:	81a3      	strheq	r3, [r4, #12]
 80017e4:	bf18      	it	ne
 80017e6:	81a3      	strhne	r3, [r4, #12]
 80017e8:	bd10      	pop	{r4, pc}

080017ea <__sclose>:
 80017ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80017ee:	f000 b813 	b.w	8001818 <_close_r>
	...

080017f4 <_write_r>:
 80017f4:	b538      	push	{r3, r4, r5, lr}
 80017f6:	4d07      	ldr	r5, [pc, #28]	; (8001814 <_write_r+0x20>)
 80017f8:	4604      	mov	r4, r0
 80017fa:	4608      	mov	r0, r1
 80017fc:	4611      	mov	r1, r2
 80017fe:	2200      	movs	r2, #0
 8001800:	602a      	str	r2, [r5, #0]
 8001802:	461a      	mov	r2, r3
 8001804:	f000 f91c 	bl	8001a40 <_write>
 8001808:	1c43      	adds	r3, r0, #1
 800180a:	d102      	bne.n	8001812 <_write_r+0x1e>
 800180c:	682b      	ldr	r3, [r5, #0]
 800180e:	b103      	cbz	r3, 8001812 <_write_r+0x1e>
 8001810:	6023      	str	r3, [r4, #0]
 8001812:	bd38      	pop	{r3, r4, r5, pc}
 8001814:	2000015c 	.word	0x2000015c

08001818 <_close_r>:
 8001818:	b538      	push	{r3, r4, r5, lr}
 800181a:	4d06      	ldr	r5, [pc, #24]	; (8001834 <_close_r+0x1c>)
 800181c:	2300      	movs	r3, #0
 800181e:	4604      	mov	r4, r0
 8001820:	4608      	mov	r0, r1
 8001822:	602b      	str	r3, [r5, #0]
 8001824:	f000 f93e 	bl	8001aa4 <_close>
 8001828:	1c43      	adds	r3, r0, #1
 800182a:	d102      	bne.n	8001832 <_close_r+0x1a>
 800182c:	682b      	ldr	r3, [r5, #0]
 800182e:	b103      	cbz	r3, 8001832 <_close_r+0x1a>
 8001830:	6023      	str	r3, [r4, #0]
 8001832:	bd38      	pop	{r3, r4, r5, pc}
 8001834:	2000015c 	.word	0x2000015c

08001838 <_fstat_r>:
 8001838:	b538      	push	{r3, r4, r5, lr}
 800183a:	4d07      	ldr	r5, [pc, #28]	; (8001858 <_fstat_r+0x20>)
 800183c:	2300      	movs	r3, #0
 800183e:	4604      	mov	r4, r0
 8001840:	4608      	mov	r0, r1
 8001842:	4611      	mov	r1, r2
 8001844:	602b      	str	r3, [r5, #0]
 8001846:	f000 f974 	bl	8001b32 <_fstat>
 800184a:	1c43      	adds	r3, r0, #1
 800184c:	d102      	bne.n	8001854 <_fstat_r+0x1c>
 800184e:	682b      	ldr	r3, [r5, #0]
 8001850:	b103      	cbz	r3, 8001854 <_fstat_r+0x1c>
 8001852:	6023      	str	r3, [r4, #0]
 8001854:	bd38      	pop	{r3, r4, r5, pc}
 8001856:	bf00      	nop
 8001858:	2000015c 	.word	0x2000015c

0800185c <_isatty_r>:
 800185c:	b538      	push	{r3, r4, r5, lr}
 800185e:	4d06      	ldr	r5, [pc, #24]	; (8001878 <_isatty_r+0x1c>)
 8001860:	2300      	movs	r3, #0
 8001862:	4604      	mov	r4, r0
 8001864:	4608      	mov	r0, r1
 8001866:	602b      	str	r3, [r5, #0]
 8001868:	f000 fac8 	bl	8001dfc <_isatty>
 800186c:	1c43      	adds	r3, r0, #1
 800186e:	d102      	bne.n	8001876 <_isatty_r+0x1a>
 8001870:	682b      	ldr	r3, [r5, #0]
 8001872:	b103      	cbz	r3, 8001876 <_isatty_r+0x1a>
 8001874:	6023      	str	r3, [r4, #0]
 8001876:	bd38      	pop	{r3, r4, r5, pc}
 8001878:	2000015c 	.word	0x2000015c

0800187c <_lseek_r>:
 800187c:	b538      	push	{r3, r4, r5, lr}
 800187e:	4d07      	ldr	r5, [pc, #28]	; (800189c <_lseek_r+0x20>)
 8001880:	4604      	mov	r4, r0
 8001882:	4608      	mov	r0, r1
 8001884:	4611      	mov	r1, r2
 8001886:	2200      	movs	r2, #0
 8001888:	602a      	str	r2, [r5, #0]
 800188a:	461a      	mov	r2, r3
 800188c:	f000 f8c6 	bl	8001a1c <_lseek>
 8001890:	1c43      	adds	r3, r0, #1
 8001892:	d102      	bne.n	800189a <_lseek_r+0x1e>
 8001894:	682b      	ldr	r3, [r5, #0]
 8001896:	b103      	cbz	r3, 800189a <_lseek_r+0x1e>
 8001898:	6023      	str	r3, [r4, #0]
 800189a:	bd38      	pop	{r3, r4, r5, pc}
 800189c:	2000015c 	.word	0x2000015c

080018a0 <__malloc_lock>:
 80018a0:	4801      	ldr	r0, [pc, #4]	; (80018a8 <__malloc_lock+0x8>)
 80018a2:	f7ff bb55 	b.w	8000f50 <__retarget_lock_acquire_recursive>
 80018a6:	bf00      	nop
 80018a8:	20000154 	.word	0x20000154

080018ac <__malloc_unlock>:
 80018ac:	4801      	ldr	r0, [pc, #4]	; (80018b4 <__malloc_unlock+0x8>)
 80018ae:	f7ff bb50 	b.w	8000f52 <__retarget_lock_release_recursive>
 80018b2:	bf00      	nop
 80018b4:	20000154 	.word	0x20000154

080018b8 <_read_r>:
 80018b8:	b538      	push	{r3, r4, r5, lr}
 80018ba:	4d07      	ldr	r5, [pc, #28]	; (80018d8 <_read_r+0x20>)
 80018bc:	4604      	mov	r4, r0
 80018be:	4608      	mov	r0, r1
 80018c0:	4611      	mov	r1, r2
 80018c2:	2200      	movs	r2, #0
 80018c4:	602a      	str	r2, [r5, #0]
 80018c6:	461a      	mov	r2, r3
 80018c8:	f000 f850 	bl	800196c <_read>
 80018cc:	1c43      	adds	r3, r0, #1
 80018ce:	d102      	bne.n	80018d6 <_read_r+0x1e>
 80018d0:	682b      	ldr	r3, [r5, #0]
 80018d2:	b103      	cbz	r3, 80018d6 <_read_r+0x1e>
 80018d4:	6023      	str	r3, [r4, #0]
 80018d6:	bd38      	pop	{r3, r4, r5, pc}
 80018d8:	2000015c 	.word	0x2000015c

080018dc <findslot>:
 80018dc:	4b0a      	ldr	r3, [pc, #40]	; (8001908 <findslot+0x2c>)
 80018de:	b510      	push	{r4, lr}
 80018e0:	4604      	mov	r4, r0
 80018e2:	6818      	ldr	r0, [r3, #0]
 80018e4:	b118      	cbz	r0, 80018ee <findslot+0x12>
 80018e6:	6983      	ldr	r3, [r0, #24]
 80018e8:	b90b      	cbnz	r3, 80018ee <findslot+0x12>
 80018ea:	f7ff fa93 	bl	8000e14 <__sinit>
 80018ee:	2c13      	cmp	r4, #19
 80018f0:	d807      	bhi.n	8001902 <findslot+0x26>
 80018f2:	4806      	ldr	r0, [pc, #24]	; (800190c <findslot+0x30>)
 80018f4:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 80018f8:	3201      	adds	r2, #1
 80018fa:	d002      	beq.n	8001902 <findslot+0x26>
 80018fc:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8001900:	bd10      	pop	{r4, pc}
 8001902:	2000      	movs	r0, #0
 8001904:	e7fc      	b.n	8001900 <findslot+0x24>
 8001906:	bf00      	nop
 8001908:	20000000 	.word	0x20000000
 800190c:	200000a0 	.word	0x200000a0

08001910 <checkerror>:
 8001910:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001912:	1c43      	adds	r3, r0, #1
 8001914:	4604      	mov	r4, r0
 8001916:	d109      	bne.n	800192c <checkerror+0x1c>
 8001918:	f7fe ffe2 	bl	80008e0 <__errno>
 800191c:	2613      	movs	r6, #19
 800191e:	4605      	mov	r5, r0
 8001920:	2700      	movs	r7, #0
 8001922:	4630      	mov	r0, r6
 8001924:	4639      	mov	r1, r7
 8001926:	beab      	bkpt	0x00ab
 8001928:	4606      	mov	r6, r0
 800192a:	602e      	str	r6, [r5, #0]
 800192c:	4620      	mov	r0, r4
 800192e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001930 <error>:
 8001930:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001932:	4604      	mov	r4, r0
 8001934:	f7fe ffd4 	bl	80008e0 <__errno>
 8001938:	2613      	movs	r6, #19
 800193a:	4605      	mov	r5, r0
 800193c:	2700      	movs	r7, #0
 800193e:	4630      	mov	r0, r6
 8001940:	4639      	mov	r1, r7
 8001942:	beab      	bkpt	0x00ab
 8001944:	4606      	mov	r6, r0
 8001946:	602e      	str	r6, [r5, #0]
 8001948:	4620      	mov	r0, r4
 800194a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800194c <_swiread>:
 800194c:	b530      	push	{r4, r5, lr}
 800194e:	b085      	sub	sp, #20
 8001950:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001954:	9203      	str	r2, [sp, #12]
 8001956:	2406      	movs	r4, #6
 8001958:	ad01      	add	r5, sp, #4
 800195a:	4620      	mov	r0, r4
 800195c:	4629      	mov	r1, r5
 800195e:	beab      	bkpt	0x00ab
 8001960:	4604      	mov	r4, r0
 8001962:	4620      	mov	r0, r4
 8001964:	f7ff ffd4 	bl	8001910 <checkerror>
 8001968:	b005      	add	sp, #20
 800196a:	bd30      	pop	{r4, r5, pc}

0800196c <_read>:
 800196c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800196e:	4615      	mov	r5, r2
 8001970:	9101      	str	r1, [sp, #4]
 8001972:	f7ff ffb3 	bl	80018dc <findslot>
 8001976:	9901      	ldr	r1, [sp, #4]
 8001978:	4604      	mov	r4, r0
 800197a:	b938      	cbnz	r0, 800198c <_read+0x20>
 800197c:	f7fe ffb0 	bl	80008e0 <__errno>
 8001980:	2309      	movs	r3, #9
 8001982:	6003      	str	r3, [r0, #0]
 8001984:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001988:	b003      	add	sp, #12
 800198a:	bd30      	pop	{r4, r5, pc}
 800198c:	6800      	ldr	r0, [r0, #0]
 800198e:	462a      	mov	r2, r5
 8001990:	f7ff ffdc 	bl	800194c <_swiread>
 8001994:	1c43      	adds	r3, r0, #1
 8001996:	d0f7      	beq.n	8001988 <_read+0x1c>
 8001998:	6863      	ldr	r3, [r4, #4]
 800199a:	1a2a      	subs	r2, r5, r0
 800199c:	4413      	add	r3, r2
 800199e:	6063      	str	r3, [r4, #4]
 80019a0:	4610      	mov	r0, r2
 80019a2:	e7f1      	b.n	8001988 <_read+0x1c>

080019a4 <_swilseek>:
 80019a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80019a6:	460c      	mov	r4, r1
 80019a8:	4616      	mov	r6, r2
 80019aa:	f7ff ff97 	bl	80018dc <findslot>
 80019ae:	4605      	mov	r5, r0
 80019b0:	b940      	cbnz	r0, 80019c4 <_swilseek+0x20>
 80019b2:	f7fe ff95 	bl	80008e0 <__errno>
 80019b6:	2309      	movs	r3, #9
 80019b8:	6003      	str	r3, [r0, #0]
 80019ba:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80019be:	4620      	mov	r0, r4
 80019c0:	b003      	add	sp, #12
 80019c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80019c4:	2e02      	cmp	r6, #2
 80019c6:	d903      	bls.n	80019d0 <_swilseek+0x2c>
 80019c8:	f7fe ff8a 	bl	80008e0 <__errno>
 80019cc:	2316      	movs	r3, #22
 80019ce:	e7f3      	b.n	80019b8 <_swilseek+0x14>
 80019d0:	2e01      	cmp	r6, #1
 80019d2:	d112      	bne.n	80019fa <_swilseek+0x56>
 80019d4:	6843      	ldr	r3, [r0, #4]
 80019d6:	18e4      	adds	r4, r4, r3
 80019d8:	d4f6      	bmi.n	80019c8 <_swilseek+0x24>
 80019da:	682b      	ldr	r3, [r5, #0]
 80019dc:	260a      	movs	r6, #10
 80019de:	e9cd 3400 	strd	r3, r4, [sp]
 80019e2:	466f      	mov	r7, sp
 80019e4:	4630      	mov	r0, r6
 80019e6:	4639      	mov	r1, r7
 80019e8:	beab      	bkpt	0x00ab
 80019ea:	4606      	mov	r6, r0
 80019ec:	4630      	mov	r0, r6
 80019ee:	f7ff ff8f 	bl	8001910 <checkerror>
 80019f2:	2800      	cmp	r0, #0
 80019f4:	dbe1      	blt.n	80019ba <_swilseek+0x16>
 80019f6:	606c      	str	r4, [r5, #4]
 80019f8:	e7e1      	b.n	80019be <_swilseek+0x1a>
 80019fa:	2e02      	cmp	r6, #2
 80019fc:	d1ed      	bne.n	80019da <_swilseek+0x36>
 80019fe:	6803      	ldr	r3, [r0, #0]
 8001a00:	9300      	str	r3, [sp, #0]
 8001a02:	260c      	movs	r6, #12
 8001a04:	466f      	mov	r7, sp
 8001a06:	4630      	mov	r0, r6
 8001a08:	4639      	mov	r1, r7
 8001a0a:	beab      	bkpt	0x00ab
 8001a0c:	4606      	mov	r6, r0
 8001a0e:	4630      	mov	r0, r6
 8001a10:	f7ff ff7e 	bl	8001910 <checkerror>
 8001a14:	1c43      	adds	r3, r0, #1
 8001a16:	d0d0      	beq.n	80019ba <_swilseek+0x16>
 8001a18:	4404      	add	r4, r0
 8001a1a:	e7de      	b.n	80019da <_swilseek+0x36>

08001a1c <_lseek>:
 8001a1c:	f7ff bfc2 	b.w	80019a4 <_swilseek>

08001a20 <_swiwrite>:
 8001a20:	b530      	push	{r4, r5, lr}
 8001a22:	b085      	sub	sp, #20
 8001a24:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001a28:	9203      	str	r2, [sp, #12]
 8001a2a:	2405      	movs	r4, #5
 8001a2c:	ad01      	add	r5, sp, #4
 8001a2e:	4620      	mov	r0, r4
 8001a30:	4629      	mov	r1, r5
 8001a32:	beab      	bkpt	0x00ab
 8001a34:	4604      	mov	r4, r0
 8001a36:	4620      	mov	r0, r4
 8001a38:	f7ff ff6a 	bl	8001910 <checkerror>
 8001a3c:	b005      	add	sp, #20
 8001a3e:	bd30      	pop	{r4, r5, pc}

08001a40 <_write>:
 8001a40:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001a42:	4615      	mov	r5, r2
 8001a44:	9101      	str	r1, [sp, #4]
 8001a46:	f7ff ff49 	bl	80018dc <findslot>
 8001a4a:	9901      	ldr	r1, [sp, #4]
 8001a4c:	4604      	mov	r4, r0
 8001a4e:	b930      	cbnz	r0, 8001a5e <_write+0x1e>
 8001a50:	f7fe ff46 	bl	80008e0 <__errno>
 8001a54:	2309      	movs	r3, #9
 8001a56:	6003      	str	r3, [r0, #0]
 8001a58:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001a5c:	e012      	b.n	8001a84 <_write+0x44>
 8001a5e:	6800      	ldr	r0, [r0, #0]
 8001a60:	462a      	mov	r2, r5
 8001a62:	f7ff ffdd 	bl	8001a20 <_swiwrite>
 8001a66:	2800      	cmp	r0, #0
 8001a68:	dbf6      	blt.n	8001a58 <_write+0x18>
 8001a6a:	6862      	ldr	r2, [r4, #4]
 8001a6c:	1a2b      	subs	r3, r5, r0
 8001a6e:	441a      	add	r2, r3
 8001a70:	42a8      	cmp	r0, r5
 8001a72:	6062      	str	r2, [r4, #4]
 8001a74:	d105      	bne.n	8001a82 <_write+0x42>
 8001a76:	2000      	movs	r0, #0
 8001a78:	b003      	add	sp, #12
 8001a7a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001a7e:	f7ff bf57 	b.w	8001930 <error>
 8001a82:	4618      	mov	r0, r3
 8001a84:	b003      	add	sp, #12
 8001a86:	bd30      	pop	{r4, r5, pc}

08001a88 <_swiclose>:
 8001a88:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001a8a:	2402      	movs	r4, #2
 8001a8c:	9001      	str	r0, [sp, #4]
 8001a8e:	ad01      	add	r5, sp, #4
 8001a90:	4620      	mov	r0, r4
 8001a92:	4629      	mov	r1, r5
 8001a94:	beab      	bkpt	0x00ab
 8001a96:	4604      	mov	r4, r0
 8001a98:	4620      	mov	r0, r4
 8001a9a:	f7ff ff39 	bl	8001910 <checkerror>
 8001a9e:	b003      	add	sp, #12
 8001aa0:	bd30      	pop	{r4, r5, pc}
	...

08001aa4 <_close>:
 8001aa4:	b538      	push	{r3, r4, r5, lr}
 8001aa6:	4605      	mov	r5, r0
 8001aa8:	f7ff ff18 	bl	80018dc <findslot>
 8001aac:	4604      	mov	r4, r0
 8001aae:	b930      	cbnz	r0, 8001abe <_close+0x1a>
 8001ab0:	f7fe ff16 	bl	80008e0 <__errno>
 8001ab4:	2309      	movs	r3, #9
 8001ab6:	6003      	str	r3, [r0, #0]
 8001ab8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001abc:	bd38      	pop	{r3, r4, r5, pc}
 8001abe:	3d01      	subs	r5, #1
 8001ac0:	2d01      	cmp	r5, #1
 8001ac2:	d809      	bhi.n	8001ad8 <_close+0x34>
 8001ac4:	4b09      	ldr	r3, [pc, #36]	; (8001aec <_close+0x48>)
 8001ac6:	689a      	ldr	r2, [r3, #8]
 8001ac8:	691b      	ldr	r3, [r3, #16]
 8001aca:	429a      	cmp	r2, r3
 8001acc:	d104      	bne.n	8001ad8 <_close+0x34>
 8001ace:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001ad2:	6003      	str	r3, [r0, #0]
 8001ad4:	2000      	movs	r0, #0
 8001ad6:	e7f1      	b.n	8001abc <_close+0x18>
 8001ad8:	6820      	ldr	r0, [r4, #0]
 8001ada:	f7ff ffd5 	bl	8001a88 <_swiclose>
 8001ade:	2800      	cmp	r0, #0
 8001ae0:	d1ec      	bne.n	8001abc <_close+0x18>
 8001ae2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001ae6:	6023      	str	r3, [r4, #0]
 8001ae8:	e7e8      	b.n	8001abc <_close+0x18>
 8001aea:	bf00      	nop
 8001aec:	200000a0 	.word	0x200000a0

08001af0 <_swistat>:
 8001af0:	b570      	push	{r4, r5, r6, lr}
 8001af2:	460c      	mov	r4, r1
 8001af4:	f7ff fef2 	bl	80018dc <findslot>
 8001af8:	4605      	mov	r5, r0
 8001afa:	b930      	cbnz	r0, 8001b0a <_swistat+0x1a>
 8001afc:	f7fe fef0 	bl	80008e0 <__errno>
 8001b00:	2309      	movs	r3, #9
 8001b02:	6003      	str	r3, [r0, #0]
 8001b04:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001b08:	bd70      	pop	{r4, r5, r6, pc}
 8001b0a:	6863      	ldr	r3, [r4, #4]
 8001b0c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001b10:	6063      	str	r3, [r4, #4]
 8001b12:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001b16:	64a3      	str	r3, [r4, #72]	; 0x48
 8001b18:	260c      	movs	r6, #12
 8001b1a:	4630      	mov	r0, r6
 8001b1c:	4629      	mov	r1, r5
 8001b1e:	beab      	bkpt	0x00ab
 8001b20:	4605      	mov	r5, r0
 8001b22:	4628      	mov	r0, r5
 8001b24:	f7ff fef4 	bl	8001910 <checkerror>
 8001b28:	1c43      	adds	r3, r0, #1
 8001b2a:	bf1c      	itt	ne
 8001b2c:	6120      	strne	r0, [r4, #16]
 8001b2e:	2000      	movne	r0, #0
 8001b30:	e7ea      	b.n	8001b08 <_swistat+0x18>

08001b32 <_fstat>:
 8001b32:	460b      	mov	r3, r1
 8001b34:	b510      	push	{r4, lr}
 8001b36:	2100      	movs	r1, #0
 8001b38:	4604      	mov	r4, r0
 8001b3a:	2258      	movs	r2, #88	; 0x58
 8001b3c:	4618      	mov	r0, r3
 8001b3e:	f7fe fef9 	bl	8000934 <memset>
 8001b42:	4601      	mov	r1, r0
 8001b44:	4620      	mov	r0, r4
 8001b46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001b4a:	f7ff bfd1 	b.w	8001af0 <_swistat>

08001b4e <_stat>:
 8001b4e:	b538      	push	{r3, r4, r5, lr}
 8001b50:	460d      	mov	r5, r1
 8001b52:	4604      	mov	r4, r0
 8001b54:	2258      	movs	r2, #88	; 0x58
 8001b56:	2100      	movs	r1, #0
 8001b58:	4628      	mov	r0, r5
 8001b5a:	f7fe feeb 	bl	8000934 <memset>
 8001b5e:	4620      	mov	r0, r4
 8001b60:	2100      	movs	r1, #0
 8001b62:	f000 f811 	bl	8001b88 <_swiopen>
 8001b66:	1c43      	adds	r3, r0, #1
 8001b68:	4604      	mov	r4, r0
 8001b6a:	d00b      	beq.n	8001b84 <_stat+0x36>
 8001b6c:	686b      	ldr	r3, [r5, #4]
 8001b6e:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8001b72:	606b      	str	r3, [r5, #4]
 8001b74:	4629      	mov	r1, r5
 8001b76:	f7ff ffbb 	bl	8001af0 <_swistat>
 8001b7a:	4605      	mov	r5, r0
 8001b7c:	4620      	mov	r0, r4
 8001b7e:	f7ff ff91 	bl	8001aa4 <_close>
 8001b82:	462c      	mov	r4, r5
 8001b84:	4620      	mov	r0, r4
 8001b86:	bd38      	pop	{r3, r4, r5, pc}

08001b88 <_swiopen>:
 8001b88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001b8c:	4b2a      	ldr	r3, [pc, #168]	; (8001c38 <_swiopen+0xb0>)
 8001b8e:	b097      	sub	sp, #92	; 0x5c
 8001b90:	4681      	mov	r9, r0
 8001b92:	460f      	mov	r7, r1
 8001b94:	2500      	movs	r5, #0
 8001b96:	461e      	mov	r6, r3
 8001b98:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 8001b9c:	1c61      	adds	r1, r4, #1
 8001b9e:	d037      	beq.n	8001c10 <_swiopen+0x88>
 8001ba0:	3501      	adds	r5, #1
 8001ba2:	2d14      	cmp	r5, #20
 8001ba4:	d1f8      	bne.n	8001b98 <_swiopen+0x10>
 8001ba6:	f7fe fe9b 	bl	80008e0 <__errno>
 8001baa:	2318      	movs	r3, #24
 8001bac:	6003      	str	r3, [r0, #0]
 8001bae:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8001bb2:	e03d      	b.n	8001c30 <_swiopen+0xa8>
 8001bb4:	f3c7 4400 	ubfx	r4, r7, #16, #1
 8001bb8:	f240 6301 	movw	r3, #1537	; 0x601
 8001bbc:	07ba      	lsls	r2, r7, #30
 8001bbe:	bf48      	it	mi
 8001bc0:	f044 0402 	orrmi.w	r4, r4, #2
 8001bc4:	421f      	tst	r7, r3
 8001bc6:	bf18      	it	ne
 8001bc8:	f044 0404 	orrne.w	r4, r4, #4
 8001bcc:	073b      	lsls	r3, r7, #28
 8001bce:	bf48      	it	mi
 8001bd0:	f024 0404 	bicmi.w	r4, r4, #4
 8001bd4:	4648      	mov	r0, r9
 8001bd6:	bf48      	it	mi
 8001bd8:	f044 0408 	orrmi.w	r4, r4, #8
 8001bdc:	f8cd 9000 	str.w	r9, [sp]
 8001be0:	f7fe fb4e 	bl	8000280 <strlen>
 8001be4:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8001be8:	2401      	movs	r4, #1
 8001bea:	4620      	mov	r0, r4
 8001bec:	4641      	mov	r1, r8
 8001bee:	beab      	bkpt	0x00ab
 8001bf0:	4604      	mov	r4, r0
 8001bf2:	2c00      	cmp	r4, #0
 8001bf4:	db07      	blt.n	8001c06 <_swiopen+0x7e>
 8001bf6:	f846 4035 	str.w	r4, [r6, r5, lsl #3]
 8001bfa:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 8001bfe:	2300      	movs	r3, #0
 8001c00:	6073      	str	r3, [r6, #4]
 8001c02:	462c      	mov	r4, r5
 8001c04:	e014      	b.n	8001c30 <_swiopen+0xa8>
 8001c06:	4620      	mov	r0, r4
 8001c08:	f7ff fe92 	bl	8001930 <error>
 8001c0c:	4604      	mov	r4, r0
 8001c0e:	e00f      	b.n	8001c30 <_swiopen+0xa8>
 8001c10:	f407 6320 	and.w	r3, r7, #2560	; 0xa00
 8001c14:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8001c18:	46e8      	mov	r8, sp
 8001c1a:	d1cb      	bne.n	8001bb4 <_swiopen+0x2c>
 8001c1c:	4641      	mov	r1, r8
 8001c1e:	4648      	mov	r0, r9
 8001c20:	f7ff ff95 	bl	8001b4e <_stat>
 8001c24:	3001      	adds	r0, #1
 8001c26:	d0c5      	beq.n	8001bb4 <_swiopen+0x2c>
 8001c28:	f7fe fe5a 	bl	80008e0 <__errno>
 8001c2c:	2311      	movs	r3, #17
 8001c2e:	6003      	str	r3, [r0, #0]
 8001c30:	4620      	mov	r0, r4
 8001c32:	b017      	add	sp, #92	; 0x5c
 8001c34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001c38:	200000a0 	.word	0x200000a0

08001c3c <_get_semihosting_exts>:
 8001c3c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001c40:	4606      	mov	r6, r0
 8001c42:	460f      	mov	r7, r1
 8001c44:	482a      	ldr	r0, [pc, #168]	; (8001cf0 <_get_semihosting_exts+0xb4>)
 8001c46:	2100      	movs	r1, #0
 8001c48:	4615      	mov	r5, r2
 8001c4a:	f7ff ff9d 	bl	8001b88 <_swiopen>
 8001c4e:	462a      	mov	r2, r5
 8001c50:	4604      	mov	r4, r0
 8001c52:	2100      	movs	r1, #0
 8001c54:	4630      	mov	r0, r6
 8001c56:	f7fe fe6d 	bl	8000934 <memset>
 8001c5a:	1c63      	adds	r3, r4, #1
 8001c5c:	d016      	beq.n	8001c8c <_get_semihosting_exts+0x50>
 8001c5e:	4620      	mov	r0, r4
 8001c60:	f7ff fe3c 	bl	80018dc <findslot>
 8001c64:	f04f 090c 	mov.w	r9, #12
 8001c68:	4680      	mov	r8, r0
 8001c6a:	4648      	mov	r0, r9
 8001c6c:	4641      	mov	r1, r8
 8001c6e:	beab      	bkpt	0x00ab
 8001c70:	4680      	mov	r8, r0
 8001c72:	4640      	mov	r0, r8
 8001c74:	f7ff fe4c 	bl	8001910 <checkerror>
 8001c78:	2803      	cmp	r0, #3
 8001c7a:	dd02      	ble.n	8001c82 <_get_semihosting_exts+0x46>
 8001c7c:	1ec3      	subs	r3, r0, #3
 8001c7e:	42ab      	cmp	r3, r5
 8001c80:	dc08      	bgt.n	8001c94 <_get_semihosting_exts+0x58>
 8001c82:	4620      	mov	r0, r4
 8001c84:	f7ff ff0e 	bl	8001aa4 <_close>
 8001c88:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8001c8c:	4620      	mov	r0, r4
 8001c8e:	b003      	add	sp, #12
 8001c90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001c94:	2204      	movs	r2, #4
 8001c96:	eb0d 0102 	add.w	r1, sp, r2
 8001c9a:	4620      	mov	r0, r4
 8001c9c:	f7ff fe66 	bl	800196c <_read>
 8001ca0:	2803      	cmp	r0, #3
 8001ca2:	ddee      	ble.n	8001c82 <_get_semihosting_exts+0x46>
 8001ca4:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001ca8:	2b53      	cmp	r3, #83	; 0x53
 8001caa:	d1ea      	bne.n	8001c82 <_get_semihosting_exts+0x46>
 8001cac:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8001cb0:	2b48      	cmp	r3, #72	; 0x48
 8001cb2:	d1e6      	bne.n	8001c82 <_get_semihosting_exts+0x46>
 8001cb4:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8001cb8:	2b46      	cmp	r3, #70	; 0x46
 8001cba:	d1e2      	bne.n	8001c82 <_get_semihosting_exts+0x46>
 8001cbc:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001cc0:	2b42      	cmp	r3, #66	; 0x42
 8001cc2:	d1de      	bne.n	8001c82 <_get_semihosting_exts+0x46>
 8001cc4:	2201      	movs	r2, #1
 8001cc6:	4639      	mov	r1, r7
 8001cc8:	4620      	mov	r0, r4
 8001cca:	f7ff fe6b 	bl	80019a4 <_swilseek>
 8001cce:	2800      	cmp	r0, #0
 8001cd0:	dbd7      	blt.n	8001c82 <_get_semihosting_exts+0x46>
 8001cd2:	462a      	mov	r2, r5
 8001cd4:	4631      	mov	r1, r6
 8001cd6:	4620      	mov	r0, r4
 8001cd8:	f7ff fe48 	bl	800196c <_read>
 8001cdc:	4605      	mov	r5, r0
 8001cde:	4620      	mov	r0, r4
 8001ce0:	f7ff fee0 	bl	8001aa4 <_close>
 8001ce4:	4628      	mov	r0, r5
 8001ce6:	f7ff fe13 	bl	8001910 <checkerror>
 8001cea:	4604      	mov	r4, r0
 8001cec:	e7ce      	b.n	8001c8c <_get_semihosting_exts+0x50>
 8001cee:	bf00      	nop
 8001cf0:	08001ef3 	.word	0x08001ef3

08001cf4 <initialise_semihosting_exts>:
 8001cf4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001cf6:	4d0a      	ldr	r5, [pc, #40]	; (8001d20 <initialise_semihosting_exts+0x2c>)
 8001cf8:	4c0a      	ldr	r4, [pc, #40]	; (8001d24 <initialise_semihosting_exts+0x30>)
 8001cfa:	2100      	movs	r1, #0
 8001cfc:	2201      	movs	r2, #1
 8001cfe:	a801      	add	r0, sp, #4
 8001d00:	6029      	str	r1, [r5, #0]
 8001d02:	6022      	str	r2, [r4, #0]
 8001d04:	f7ff ff9a 	bl	8001c3c <_get_semihosting_exts>
 8001d08:	2800      	cmp	r0, #0
 8001d0a:	dd07      	ble.n	8001d1c <initialise_semihosting_exts+0x28>
 8001d0c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001d10:	f003 0201 	and.w	r2, r3, #1
 8001d14:	f003 0302 	and.w	r3, r3, #2
 8001d18:	602a      	str	r2, [r5, #0]
 8001d1a:	6023      	str	r3, [r4, #0]
 8001d1c:	b003      	add	sp, #12
 8001d1e:	bd30      	pop	{r4, r5, pc}
 8001d20:	20000064 	.word	0x20000064
 8001d24:	20000068 	.word	0x20000068

08001d28 <_has_ext_stdout_stderr>:
 8001d28:	b510      	push	{r4, lr}
 8001d2a:	4c04      	ldr	r4, [pc, #16]	; (8001d3c <_has_ext_stdout_stderr+0x14>)
 8001d2c:	6822      	ldr	r2, [r4, #0]
 8001d2e:	2a00      	cmp	r2, #0
 8001d30:	da01      	bge.n	8001d36 <_has_ext_stdout_stderr+0xe>
 8001d32:	f7ff ffdf 	bl	8001cf4 <initialise_semihosting_exts>
 8001d36:	6820      	ldr	r0, [r4, #0]
 8001d38:	bd10      	pop	{r4, pc}
 8001d3a:	bf00      	nop
 8001d3c:	20000068 	.word	0x20000068

08001d40 <initialise_monitor_handles>:
 8001d40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001d44:	b085      	sub	sp, #20
 8001d46:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8001df8 <initialise_monitor_handles+0xb8>
 8001d4a:	f8cd 9004 	str.w	r9, [sp, #4]
 8001d4e:	2303      	movs	r3, #3
 8001d50:	2400      	movs	r4, #0
 8001d52:	9303      	str	r3, [sp, #12]
 8001d54:	f10d 0804 	add.w	r8, sp, #4
 8001d58:	9402      	str	r4, [sp, #8]
 8001d5a:	2501      	movs	r5, #1
 8001d5c:	4628      	mov	r0, r5
 8001d5e:	4641      	mov	r1, r8
 8001d60:	beab      	bkpt	0x00ab
 8001d62:	4605      	mov	r5, r0
 8001d64:	4e20      	ldr	r6, [pc, #128]	; (8001de8 <initialise_monitor_handles+0xa8>)
 8001d66:	4a21      	ldr	r2, [pc, #132]	; (8001dec <initialise_monitor_handles+0xac>)
 8001d68:	6035      	str	r5, [r6, #0]
 8001d6a:	4623      	mov	r3, r4
 8001d6c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001d70:	4614      	mov	r4, r2
 8001d72:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 8001d76:	3301      	adds	r3, #1
 8001d78:	2b14      	cmp	r3, #20
 8001d7a:	d1fa      	bne.n	8001d72 <initialise_monitor_handles+0x32>
 8001d7c:	f7ff ffd4 	bl	8001d28 <_has_ext_stdout_stderr>
 8001d80:	4d1b      	ldr	r5, [pc, #108]	; (8001df0 <initialise_monitor_handles+0xb0>)
 8001d82:	b1d0      	cbz	r0, 8001dba <initialise_monitor_handles+0x7a>
 8001d84:	f04f 0a03 	mov.w	sl, #3
 8001d88:	2304      	movs	r3, #4
 8001d8a:	f8cd 9004 	str.w	r9, [sp, #4]
 8001d8e:	2701      	movs	r7, #1
 8001d90:	f8cd a00c 	str.w	sl, [sp, #12]
 8001d94:	9302      	str	r3, [sp, #8]
 8001d96:	4638      	mov	r0, r7
 8001d98:	4641      	mov	r1, r8
 8001d9a:	beab      	bkpt	0x00ab
 8001d9c:	4683      	mov	fp, r0
 8001d9e:	4b15      	ldr	r3, [pc, #84]	; (8001df4 <initialise_monitor_handles+0xb4>)
 8001da0:	f8cd 9004 	str.w	r9, [sp, #4]
 8001da4:	f8c3 b000 	str.w	fp, [r3]
 8001da8:	2308      	movs	r3, #8
 8001daa:	f8cd a00c 	str.w	sl, [sp, #12]
 8001dae:	9302      	str	r3, [sp, #8]
 8001db0:	4638      	mov	r0, r7
 8001db2:	4641      	mov	r1, r8
 8001db4:	beab      	bkpt	0x00ab
 8001db6:	4607      	mov	r7, r0
 8001db8:	602f      	str	r7, [r5, #0]
 8001dba:	682b      	ldr	r3, [r5, #0]
 8001dbc:	3301      	adds	r3, #1
 8001dbe:	bf02      	ittt	eq
 8001dc0:	4b0c      	ldreq	r3, [pc, #48]	; (8001df4 <initialise_monitor_handles+0xb4>)
 8001dc2:	681b      	ldreq	r3, [r3, #0]
 8001dc4:	602b      	streq	r3, [r5, #0]
 8001dc6:	6833      	ldr	r3, [r6, #0]
 8001dc8:	6023      	str	r3, [r4, #0]
 8001dca:	2600      	movs	r6, #0
 8001dcc:	6066      	str	r6, [r4, #4]
 8001dce:	f7ff ffab 	bl	8001d28 <_has_ext_stdout_stderr>
 8001dd2:	b130      	cbz	r0, 8001de2 <initialise_monitor_handles+0xa2>
 8001dd4:	4b07      	ldr	r3, [pc, #28]	; (8001df4 <initialise_monitor_handles+0xb4>)
 8001dd6:	681b      	ldr	r3, [r3, #0]
 8001dd8:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8001ddc:	682b      	ldr	r3, [r5, #0]
 8001dde:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8001de2:	b005      	add	sp, #20
 8001de4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001de8:	20000098 	.word	0x20000098
 8001dec:	200000a0 	.word	0x200000a0
 8001df0:	20000094 	.word	0x20000094
 8001df4:	2000009c 	.word	0x2000009c
 8001df8:	08001f09 	.word	0x08001f09

08001dfc <_isatty>:
 8001dfc:	b570      	push	{r4, r5, r6, lr}
 8001dfe:	f7ff fd6d 	bl	80018dc <findslot>
 8001e02:	2509      	movs	r5, #9
 8001e04:	4604      	mov	r4, r0
 8001e06:	b920      	cbnz	r0, 8001e12 <_isatty+0x16>
 8001e08:	f7fe fd6a 	bl	80008e0 <__errno>
 8001e0c:	6005      	str	r5, [r0, #0]
 8001e0e:	4620      	mov	r0, r4
 8001e10:	bd70      	pop	{r4, r5, r6, pc}
 8001e12:	4628      	mov	r0, r5
 8001e14:	4621      	mov	r1, r4
 8001e16:	beab      	bkpt	0x00ab
 8001e18:	4604      	mov	r4, r0
 8001e1a:	2c01      	cmp	r4, #1
 8001e1c:	d0f7      	beq.n	8001e0e <_isatty+0x12>
 8001e1e:	f7fe fd5f 	bl	80008e0 <__errno>
 8001e22:	2400      	movs	r4, #0
 8001e24:	4605      	mov	r5, r0
 8001e26:	2613      	movs	r6, #19
 8001e28:	4630      	mov	r0, r6
 8001e2a:	4621      	mov	r1, r4
 8001e2c:	beab      	bkpt	0x00ab
 8001e2e:	4606      	mov	r6, r0
 8001e30:	602e      	str	r6, [r5, #0]
 8001e32:	e7ec      	b.n	8001e0e <_isatty+0x12>

08001e34 <_init>:
 8001e34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e36:	bf00      	nop
 8001e38:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001e3a:	bc08      	pop	{r3}
 8001e3c:	469e      	mov	lr, r3
 8001e3e:	4770      	bx	lr

08001e40 <_fini>:
 8001e40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e42:	bf00      	nop
 8001e44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001e46:	bc08      	pop	{r3}
 8001e48:	469e      	mov	lr, r3
 8001e4a:	4770      	bx	lr
